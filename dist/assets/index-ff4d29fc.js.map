{"version":3,"file":"index-ff4d29fc.js","sources":["../../node_modules/react-dom/client.js","../../src/contexts/LanguageContext.tsx","../../src/services/api.ts","../../src/contexts/AuthContext.tsx","../../src/components/ErrorBoundary.tsx","../../src/App.tsx","../../src/main.tsx"],"sourcesContent":["'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react'\n\nexport type Language = 'ENU' | 'PTB' | 'GER' | 'FRA' | 'ESP' | 'JPN' | 'ITA' | 'RUS' | 'ARA' | 'KOR'\n\ninterface LanguageContextType {\n  language: Language\n  setLanguage: (language: Language) => void\n  t: (key: string) => string\n}\n\nconst LanguageContext = createContext<LanguageContextType | undefined>(undefined)\n\nconst translations: Record<Language, Record<string, string>> = {\n  ENU: {\n    // Basic navigation\n    'dashboard': 'Dashboard',\n    'students': 'Students',\n    'coach-students': 'Coach & Students',\n    'teachers-instructors': 'Teachers & Instructors',\n    'championships': 'Championships',\n    'administration': 'Administration',\n    \n    // Dashboard specific translations\n    'welcome-message': 'Welcome to your Fight Academy Manager',\n    'welcome-admin': 'Welcome, Admin',\n    'welcome-user': 'Welcome, {name}',\n    'total-students': 'Total Students',\n    'active-teachers': 'Active Teachers',\n    'fight-modalities': 'Fight Modalities',\n    'available-styles': 'Available Styles',\n    'classes-today': 'Classes Today',\n    'total-active': 'Total Active',\n    'total-check-ins': 'Total Check-ins',\n    'this-week': 'This Week',\n    'training-plans': 'Training Plans',\n    'active-plans': 'Active Plans',\n    'recent-activity': 'Recent Activity',\n    'last-7-days': 'Last 7 Days',\n    'check-ins-this-week': 'Check-ins This Week',\n    'students-actively-training': 'Students Actively Training',\n    'classes-scheduled-today': 'Classes Scheduled Today',\n    'active-class-schedule': 'Active Class Schedule',\n    'active-training-plans': 'Active Training Plans',\n    'students-with-ongoing-programs': 'Students with Ongoing Programs',\n    'quick-actions': 'Quick Actions',\n    'add-new-student': 'Add New Student',\n    'add-new-instructor': 'Add New Instructor',\n    'create-class-schedule': 'Create Class Schedule',\n    'check-in-student': 'Check-in Student',\n    \n    // Sidebar navigation\n    'class-schedules': 'Class Schedules',\n    'fight-plans': 'Fight Plans',\n    'quality-evaluation': 'Quality Evaluation',\n    'branches': 'Branches',\n    \n    // Students page translations\n    'manage-student-activities': 'Manage Student Activities',\n    'manage-coach-students-data': 'Manage Coach and Students Data',\n    'company-info-settings': 'Company Info & Settings',\n    'manage-company-info': 'Manage your academy\\'s company information and system language',\n    'company-fight-team': 'Company Fight Team',\n    'select-company-fight-team': 'Select the fight team that represents your company',\n    'company-fight-team-description': 'Choose which fight team your academy officially represents in competitions and events',\n    'student-registration': 'Student Registration',\n    'register-new-students': 'Register new students and manage student information',\n    'modality-by-student': 'Fight Training Plan',\n    'student-modality-management': 'Manage student modality assignments and training plans',\n    \n    // Training Plan specific translations\n    'fight-training-plan': 'Fight Training Plan',\n    'view-modality-assignment-details': 'View Modality Assignment Details',\n    'training-progress': 'Training Progress',\n    'share-progress': 'Share Progress',\n    'share-progress-text': 'Check out my training progress!',\n    'progress-copied-to-clipboard': 'Progress copied to clipboard!',\n    'check-ins-progress': 'Check-ins Progress',\n    'check-ins-remaining': 'check-ins remaining',\n    'training-plan-overview': 'Training Plan Overview',\n    'plan-duration': 'Plan Duration',\n    'assignment-date': 'Assignment Date',\n    'expected-closing-date': 'Expected Closing Date',\n    'remaining-days': 'Remaining Days',\n    'target-progression': 'Target Progression',\n    'current-belt': 'Current Belt',\n    'target-belt': 'Target Belt',\n    'total-stripes-degrees-start': 'Total Stripes/Degrees Start',\n    'expected-stripes-degrees-conclusions': 'Expected Stripes/Degrees Conclusions',\n    'training-frequency': 'Training Frequency',\n    'recommended-sessions': 'Recommended Sessions',\n    'expected-count-check-in': 'Expected Count Check-in',\n    'attendance-rate': 'Attendance Rate',\n    'performance-metrics': 'Performance Metrics',\n    'assignment-information': 'Assignment Information',\n    'connection-id': 'Connection ID',\n    'closing-date': 'Closing Date',\n    'belt-level-at-start': 'Belt Level at Start',\n    'belt-level-start-description': 'The student\\'s belt level when this training plan was assigned',\n    'expected-closing-date-description': 'Expected date when this training plan should be completed',\n    'check-ins-count': 'Check-ins Count',\n    'check-ins': 'check-ins',\n    'from-to': 'From {startDate} to {endDate}',\n    'check-ins-count-description': 'Total number of check-ins expected for this training plan',\n    'expected-check-in-description': 'Expected number of check-ins for this training plan',\n    'expected-belt-at-closing': 'Expected Belt at Closing',\n    'adult-belts': 'Adult Belts',\n    'kids-belts-bjj': 'Kids Belts (BJJ)',\n    'kids-belts-judo': 'Kids Belts (Judo)',\n    'expected-belt-closing-description': 'Expected belt level when this training plan is completed',\n    'student-evaluation': 'Student Evaluation',\n    'evaluate-student-progress': 'Evaluate student progress and performance',\n    'student-attendance': 'Student Attendance',\n    'track-student-attendance': 'Track student attendance and participation',\n    \n    // Teachers page translations\n    'manage-teacher-activities': 'Manage Teacher Activities',\n    'teacher-registration': 'Teacher Registration',\n    'register-new-teachers': 'Register new teachers and manage teacher information',\n    'coach-registration': 'Coach Registration',\n    'register-new-coaches': 'Register new coaches and manage coach information',\n    'teacher-profiles': 'Teacher Profiles',\n    'view-manage-teacher-profiles': 'View and manage teacher profiles and information',\n    'assign-teachers': 'Assign Teachers',\n    'assign-teachers-to-classes-desc': 'Assign teachers to classes and manage teaching schedules',\n    'teacher-evaluations': 'Teacher Evaluations',\n    'evaluate-teacher-performance': 'Evaluate teacher performance and provide feedback',\n    \n    // Fight Plans page translations\n    'modality-management': 'Manage fight modalities and styles',\n    'training-phases': 'Training Phases',\n    \n    // Branches page translations\n    'branch-registration': 'Branch Registration',\n    'branch-facilities': 'Branch Facilities',\n    \n    // Fight Teams translations\n    'fight-teams': 'Fight Teams',\n    'manage-fight-teams': 'Manage Fight Teams',\n    'new-fight-team': 'New Fight Team',\n    'edit-fight-team': 'Edit Fight Team',\n    'view-fight-team': 'View Fight Team',\n    'edit-fight-team-description': 'Edit fight team details and information',\n    'view-fight-team-description': 'View fight team information and details',\n    'new-fight-team-description': 'Create a new fight team',\n    'back-to-teams': 'Back to Teams',\n    'team-id': 'Team ID',\n    'team-name': 'Team Name',\n    'team-name-placeholder': 'Enter team name',\n    'coach': 'Coach',\n    'select-coach': 'Select Coach',\n    'select-branch': 'Select Branch',\n    'established-date': 'Established Date',\n    'country-code': 'Country Code',\n    'country-code-placeholder': 'Enter country code (e.g., BR, US, AE)',\n    'fight-modalities-description': 'Select the fight modalities that this team presents (can be multiple)',\n    'max-team-size': 'Max Team Size',\n    'max-team-size-placeholder': 'Enter maximum team size',\n    'team-description-placeholder': 'Enter team description',\n    'team-logo': 'Team Logo',\n    'click-to-upload': 'Click to upload',\n    'or-drag-and-drop': 'or drag and drop',\n    'logo-upload-formats': 'PNG, JPG, GIF up to 2MB',\n    'logo-preview': 'Logo Preview',\n    'team-logo-alt': 'Team Logo',\n    'logo': 'Logo',\n    'file-too-large': 'File is too large. Please select an image smaller than 2MB.',\n    'invalid-file-type': 'Invalid file type. Please select an image file.',\n    \n    // Championship Category Form\n    'view-category': 'View Category',\n    'new-category-description': 'Create a new championship category',\n    'edit-category-description': 'Edit championship category details',\n    'view-category-description': 'View championship category information',\n    'select-championship': 'Select Championship',\n    'weight-category-placeholder': 'Enter weight category (e.g., Lightweight, Middleweight)',\n    'weight-limit': 'Weight Limit',\n    'weight-limit-placeholder': 'Enter maximum weight in kg',\n    'weight-limit-help': 'Maximum weight allowed for this category (optional)',\n    'age-groups': 'Age Groups',\n    'belts': 'Belts',\n    'select-multiple-age-groups': 'Select one or more age groups',\n    'select-multiple-belts': 'Select one or more belt levels',\n    'select-multiple-fight-modalities': 'Select one or more fight modalities',\n    'athlete-enrollment': 'Athlete Enrollment',\n    'manage-athlete-enrollment': 'Manage athlete enrollment in championships',\n    'athlete-enrollment-list': 'Athlete Enrollment List',\n    'view-enrolled-athletes': 'View enrolled athletes by championship and category',\n    'category-description-placeholder': 'Enter category description and rules',\n    'update-category': 'Update Category',\n    'create-category': 'Create Category',\n    'error-saving-category': 'Error saving category. Please try again.',\n    'team-members': 'Team Members',\n    'select-student': 'Select Student',\n    'achievements': 'Achievements',\n    'achievement-placeholder': 'Enter achievement',\n    'contact-information': 'Contact Information',\n    'contact-email-placeholder': 'Enter contact email',\n    'contact-phone-placeholder': 'Enter contact phone',\n    'notes-placeholder': 'Enter additional notes',\n    'active-team': 'Active Team',\n    'update-team': 'Update Team',\n    'create-team': 'Create Team',\n    'search-teams': 'Search teams...',\n    'all-branches': 'All Branches',\n    'all-modalities': 'All Modalities',\n    'all-status': 'All Status',\n    'team-size': 'Team Size',\n    'established': 'Established',\n    'no-teams-found': 'No Teams Found',\n    'no-teams-found-description': 'No fight teams match your current filters',\n    'create-first-team': 'Create First Team',\n    'confirm-delete-team': 'Are you sure you want to delete this fight team?',\n    'fill-required-fields': 'Please fill in all required fields',\n    'remove': 'Remove',\n    \n    // Common actions\n    'new': 'New',\n    'edit': 'Edit',\n    'view': 'View',\n    'delete': 'Delete',\n    'save': 'Save',\n    'cancel': 'Cancel',\n    'back': 'Back',\n    'search': 'Search',\n    'filter': 'Filter',\n    'export': 'Export',\n    'import': 'Import',\n    'loading': 'Loading...',\n    'no-data': 'No data found',\n    'confirm-delete': 'Are you sure you want to delete this item?',\n    \n    // Championship module\n    'championship-registration': 'Championship Registration',\n    'student-enrollment': 'Student Enrollment in Championships',\n    'championship-results': 'Championship Results',\n    'ranking-statistics': 'Ranking & Statistics',\n    'fight-associations': 'Fight Associations',\n    'affiliations': 'Affiliations',\n    'championship-categories': 'Championship Categories',\n    'registrations': 'Registrations',\n    'referees-officials': 'Referees / Officials',\n    'championship-sponsors': 'Championship Sponsors',\n    'championship-qualified-locations': 'Championship Qualified Locations',\n    \n    // Championship specific translations\n    'manage-championship-registrations': 'Manage Championship Registrations',\n    'search-championships': 'Search championships...',\n    'association': 'Association',\n    'all-associations': 'All Associations',\n    'actions': 'Actions',\n    'no-championships-found': 'No Championships Found',\n    'no-championships-found-description': 'No championships match your current filters. Try adjusting your search criteria or create a new championship.',\n    'create-first-championship': 'Create First Championship',\n    'confirm-delete-championship': 'Are you sure you want to delete this championship?',\n    \n    // Championship forms\n    'championship-id': 'Championship ID',\n    'association-id': 'Association ID',\n    'championship-name': 'Championship Name',\n    'championship-location': 'Location',\n    'start-date': 'Start Date',\n    'end-date': 'End Date',\n    'registration-deadline': 'Registration Deadline',\n    'fight-modality': 'Fight Modality',\n    'status': 'Status',\n    'upcoming': 'Upcoming',\n    'ongoing': 'Ongoing',\n    'completed': 'Completed',\n    'cancelled': 'Cancelled',\n    'new-championship': 'New Championship',\n    'edit-championship': 'Edit Championship',\n    'edit-championship-description': 'Edit championship details and information',\n    'new-championship-description': 'Create a new championship registration',\n    'back-to-championships': 'Back to Championships',\n    'save-championship': 'Save Championship',\n    'select-association': 'Select Association',\n    'championship-name-placeholder': 'Enter championship name',\n    'championship-location-placeholder': 'Enter championship location',\n    'select-modality': 'Select Modality',\n    'additional-information': 'Additional Information',\n    'max-participants': 'Max Participants',\n    'max-participants-placeholder': 'Enter maximum participants',\n    'entry-fee': 'Entry Fee',\n    'entry-fee-placeholder': 'Enter entry fee amount',\n    'organizer': 'Organizer',\n    'organizer-placeholder': 'Enter organizer name',\n    'contact-email': 'Contact Email',\n    'contact-phone': 'Contact Phone',\n    'championship-description': 'Championship Description',\n    'championship-description-placeholder': 'Enter championship description',\n    'select-qualified-location': 'Select Qualified Location',\n    \n    // Qualified Locations specific translations\n    'manage-qualified-locations': 'Manage Championship Qualified Locations',\n    'new-qualified-location': 'New Qualified Location',\n    'edit-qualified-location': 'Edit Qualified Location',\n    'edit-location-description': 'Edit qualified location details and information',\n    'new-location-description': 'Create a new qualified location for championships',\n    'back-to-locations': 'Back to Qualified Locations',\n    'save-location': 'Save Location',\n    'search-locations': 'Search locations...',\n    'location-id': 'Location ID',\n    'location-name': 'Location Name',\n    'location-name-placeholder': 'Enter location name',\n    'address-placeholder': 'Enter full address',\n    'city-placeholder': 'Enter city name',\n    'state-placeholder': 'Enter state/province',\n    'country-placeholder': 'Enter country name',\n    'postal-code': 'Postal Code',\n    'postal-code-placeholder': 'Enter postal/zip code',\n    'capacity': 'Capacity',\n    'capacity-placeholder': 'Enter maximum capacity',\n    'facilities': 'Facilities',\n    'add-facility-placeholder': 'Add facility (e.g., Main Arena, Parking)',\n    'add': 'Add',\n    'contact-person': 'Contact Person',\n    'contact-person-placeholder': 'Enter contact person name',\n    'certification-information': 'Certification Information',\n    'certification-level': 'Certification Level',\n    'certification-date': 'Certification Date',\n    'certification-expiry': 'Certification Expiry',\n    'basic': 'Basic',\n    'intermediate': 'Intermediate',\n    'advanced': 'Advanced',\n    'premium': 'Premium',\n    'all-levels': 'All Levels',\n    'all-countries': 'All Countries',\n    'no-locations-found': 'No Qualified Locations Found',\n    'no-locations-found-description': 'No qualified locations match your current filters. Try adjusting your search criteria or create a new qualified location.',\n    'create-first-location': 'Create First Qualified Location',\n    'confirm-delete-location': 'Are you sure you want to delete this qualified location?',\n    'location-image': 'Location Image',\n    'image-url-placeholder': 'Enter image URL (e.g., https://example.com/image.jpg)',\n    'image-preview': 'Image Preview',\n    'location-image-alt': 'Location image',\n    'image': 'Image',\n    \n    // Affiliation forms\n    'affiliation-id': 'Affiliation ID',\n    'student-id': 'Student ID',\n    'membership-number': 'Membership Number',\n    'affiliation-date': 'Affiliation Date',\n    'notes': 'Notes',\n    'new-affiliation': 'New Affiliation',\n    'edit-affiliation': 'Edit Affiliation',\n    'save-affiliation': 'Save Affiliation',\n    \n    // Category forms\n    'category-id': 'Category ID',\n    'age-group': 'Age Group',\n    'weight-category': 'Weight Category',\n    'gender': 'Gender',\n    'mixed': 'Mixed',\n    'all-belts': 'All Belts',\n    'new-category': 'New Category',\n    'edit-category': 'Edit Category',\n    'save-category': 'Save Category',\n    \n    // Registration forms\n    'registration-id': 'Registration ID',\n    'teacher-id': 'Teacher ID',\n    'registration-date': 'Registration Date',\n    'weight': 'Weight',\n    'payment-status': 'Payment Status',\n    'medical-certificate': 'Medical Certificate',\n    'insurance-number': 'Insurance Number',\n    'paid': 'Paid',\n    'pending': 'Pending',\n    'refunded': 'Refunded',\n    'new-registration': 'New Registration',\n    'edit-registration': 'Edit Registration',\n    'save-registration': 'Save Registration',\n    \n    // Result forms\n    'result-id': 'Result ID',\n    'position': 'Position',\n    'points': 'Points',\n    'medal-type': 'Medal Type',\n    'gold': 'Gold',\n    'silver': 'Silver',\n    'bronze': 'Bronze',\n    'none': 'None',\n    '1st': '1st',\n    '2nd': '2nd',\n    '3rd': '3rd',\n    'new-result': 'New Result',\n    'edit-result': 'Edit Result',\n    'save-result': 'Save Result',\n    \n    // Official forms\n    'official-id': 'Official ID',\n    'official-name': 'Official Name',\n    'official-level': 'Official Level',\n    'assigned-categories': 'Assigned Categories',\n    'certification-number': 'Certification Number',\n    'national': 'National',\n    'international': 'International',\n    'regional': 'Regional',\n    'local': 'Local',\n    'new-official': 'New Official',\n    'edit-official': 'Edit Official',\n    'save-official': 'Save Official',\n    \n    // Sponsor forms\n    'sponsor-id': 'Sponsor ID',\n    'sponsor-name': 'Sponsor Name',\n    'sponsor-logo': 'Sponsor Logo',\n    'sponsor-link': 'Sponsor Link',\n    'sponsor-description': 'Sponsor Description',\n    'sponsor-type': 'Sponsor Type',\n    'contribution-amount': 'Contribution Amount',\n    'title': 'Title',\n    'supporting': 'Supporting',\n    'new-sponsor': 'New Sponsor',\n    'edit-sponsor': 'Edit Sponsor',\n    'save-sponsor': 'Save Sponsor',\n    \n    // Common fields\n    'name': 'Name',\n    'description': 'Description',\n    'date': 'Date',\n    'time': 'Time',\n    'location': 'Location',\n    'contact': 'Contact',\n    'email': 'Email',\n    'phone': 'Phone',\n    'address': 'Address',\n    'active': 'Active',\n    'inactive': 'Inactive',\n    'all': 'All',\n    'select': 'Select',\n    'required': 'Required',\n    'optional': 'Optional',\n    \n    // Belt levels\n    'white-belt': 'White Belt',\n    'blue-belt': 'Blue Belt',\n    'purple-belt': 'Purple Belt',\n    'brown-belt': 'Brown Belt',\n    'black-belt': 'Black Belt',\n    \n    // Age groups\n    'adult': 'Adult',\n    'kids': 'Kids',\n    'master': 'Master',\n    'senior': 'Senior',\n    \n    // Genders\n    'male': 'Male',\n    'female': 'Female',\n    'other': 'Other',\n    'unisex': 'Unisex',\n    'womens-only': 'Women\\'s Only',\n\n    // Fight Management\n    'fight-management': 'Fight Management',\n    'manage-fight-phases': 'Manage fight phases and individual fights',\n    'fight-phases': 'Fight Phases',\n    'manage-phases': 'Manage championship fight phases',\n    'new-fight-phase': 'New Fight Phase',\n    'edit-fight-phase': 'Edit Fight Phase',\n    'view-fight-phase': 'View Fight Phase',\n    'edit-phase-description': 'Edit fight phase details and information',\n    'new-phase-description': 'Create a new fight phase',\n    'view-phase-description': 'View fight phase information',\n    'back-to-phases': 'Back to Fight Phases',\n    'save-phase': 'Save Phase',\n    'search-phases': 'Search phases...',\n    'phase-id': 'Phase ID',\n    'phase-name': 'Phase Name',\n    'phase-name-placeholder': 'Enter phase name',\n    'phase-type': 'Phase Type',\n    'select-phase-type': 'Select Phase Type',\n    'elimination': 'Elimination',\n    'round-robin': 'Round Robin',\n    'bracket': 'Bracket',\n    'pool': 'Pool',\n    'phase-order': 'Phase Order',\n    'phase-order-placeholder': 'Enter phase order number',\n    'phase-start-date': 'Start Date',\n    'phase-end-date': 'End Date',\n    'phase-status': 'Status',\n    'select-phase-status': 'Select Status',\n    'phase-description': 'Description',\n    'phase-description-placeholder': 'Enter phase description',\n    'phase-rules': 'Rules',\n    'phase-rules-placeholder': 'Enter phase rules',\n    'no-phases-found': 'No phases found',\n    'no-phases-found-description': 'Create your first fight phase to get started',\n    'create-first-phase': 'Create First Phase',\n    'confirm-delete-phase': 'Are you sure you want to delete this phase?',\n\n    // Individual Fights\n    'fights': 'Fights',\n    'manage-fights': 'Manage individual fights',\n    'new-fight': 'New Fight',\n    'edit-fight': 'Edit Fight',\n    'view-fight': 'View Fight',\n    'edit-fight-description': 'Edit fight details and information',\n    'new-fight-description': 'Create a new fight',\n    'view-fight-description': 'View fight information',\n    'back-to-fights': 'Back to Fights',\n    'save-fight': 'Save Fight',\n    'search-fights': 'Search fights...',\n    'fight-id': 'Fight ID',\n    'fight-number': 'Fight Number',\n    'fight-number-placeholder': 'Enter fight number',\n    'select-phase': 'Select Phase',\n    'select-category': 'Select Category',\n    'athlete1': 'Athlete 1',\n    'athlete2': 'Athlete 2',\n    'select-athlete1': 'Select Athlete 1',\n    'select-athlete2': 'Select Athlete 2',\n    'scheduled-time': 'Scheduled Time',\n    'actual-start-time': 'Actual Start Time',\n    'actual-end-time': 'Actual End Time',\n    'duration': 'Duration (minutes)',\n    'duration-placeholder': 'Enter duration in minutes',\n    'fight-status': 'Fight Status',\n    'select-fight-status': 'Select Fight Status',\n    'postponed': 'Postponed',\n    'fight-result': 'Result',\n    'select-result': 'Select Result',\n    'athlete1-win': 'Athlete 1 Win',\n    'athlete2-win': 'Athlete 2 Win',\n    'draw': 'Draw',\n    'no-contest': 'No Contest',\n    'winner': 'Winner',\n    'select-winner': 'Select Winner',\n    'method': 'Method',\n    'select-method': 'Select Method',\n    'submission': 'Submission',\n    'decision': 'Decision',\n    'disqualification': 'Disqualification',\n    'injury': 'Injury',\n    'forfeit': 'Forfeit',\n    'score1': 'Score 1',\n    'score2': 'Score 2',\n    'score-placeholder': 'Enter score',\n    'referee': 'Referee',\n    'select-referee': 'Select Referee',\n    'judge1': 'Judge 1',\n    'judge2': 'Judge 2',\n    'judge3': 'Judge 3',\n    'select-judge': 'Select Judge',\n    'fight-notes': 'Notes',\n    'fight-notes-placeholder': 'Enter fight notes',\n    'video-url': 'Video URL',\n    'video-url-placeholder': 'Enter video URL',\n    'no-fights-found': 'No fights found',\n    'no-fights-found-description': 'Create your first fight to get started',\n    'create-first-fight': 'Create First Fight',\n    'confirm-delete-fight': 'Are you sure you want to delete this fight?',\n    \n    // Authentication\n    'sign-in-to-account': 'Sign in to your account',\n    'welcome-back-message': 'Welcome back! Please sign in to continue',\n    'academy-domain': 'Academy Domain',\n    'email-address': 'Email Address',\n    'password': 'Password',\n    'signing-in': 'Signing in',\n    'sign-in': 'Sign In',\n    'demo-credentials': 'Demo Credentials',\n    'dont-have-account': \"Don't have an account?\",\n    'sign-up': 'Sign up',\n    \n    // Language Selector\n    'language-selector': 'Language Selector',\n    'select-language': 'Select your preferred language',\n    'language': 'Language',\n    'english': 'English',\n    'portuguese': 'Português'\n  },\n  \n  PTB: {\n    // Basic navigation\n    'dashboard': 'Painel de Controle',\n    'students': 'Estudantes',\n    'coach-students': 'Técnicos e Estudantes',\n    'teachers-instructors': 'Professores e Instrutores',\n    'championships': 'Campeonatos',\n    'administration': 'Administração',\n    \n    // Dashboard specific translations\n    'welcome-message': 'Bem-vindo ao seu Gerenciador de Academia de Lutas',\n    'welcome-admin': 'Bem-vindo, Admin',\n    'welcome-user': 'Bem-vindo, {name}',\n    'total-students': 'Total de Estudantes',\n    'active-teachers': 'Professores Ativos',\n    'fight-modalities': 'Modalidades de Luta',\n    'available-styles': 'Estilos Disponíveis',\n    'classes-today': 'Aulas Hoje',\n    'total-active': 'Total Ativo',\n    'total-check-ins': 'Total de Check-ins',\n    'this-week': 'Esta Semana',\n    'training-plans': 'Planos de Treinamento',\n    'active-plans': 'Planos Ativos',\n    'recent-activity': 'Atividade Recente',\n    'last-7-days': 'Últimos 7 Dias',\n    'check-ins-this-week': 'Check-ins Esta Semana',\n    'students-actively-training': 'Estudantes Treinando Ativamente',\n    'classes-scheduled-today': 'Aulas Agendadas Hoje',\n    'active-class-schedule': 'Cronograma de Aulas Ativo',\n    'active-training-plans': 'Planos de Treinamento Ativos',\n    'students-with-ongoing-programs': 'Estudantes com Programas em Andamento',\n    'quick-actions': 'Ações Rápidas',\n    'add-new-student': 'Adicionar Novo Estudante',\n    'add-new-instructor': 'Adicionar Novo Instrutor',\n    'create-class-schedule': 'Criar Cronograma de Aulas',\n    'check-in-student': 'Check-in do Estudante',\n    \n    // Sidebar navigation\n    'class-schedules': 'Cronogramas de Aulas',\n    'fight-plans': 'Planos de Luta',\n    'quality-evaluation': 'Avaliação de Qualidade',\n    'branches': 'Filiais',\n    \n    // Students page translations\n    'manage-student-activities': 'Gerenciar Atividades dos Estudantes',\n    'manage-coach-students-data': 'Gerenciar Dados de Técnicos e Estudantes',\n    'company-info-settings': 'Informações e Configurações da Empresa',\n    'manage-company-info': 'Gerencie as informações da empresa da sua academia e idioma do sistema',\n    'company-fight-team': 'Equipe de Luta da Empresa',\n    'select-company-fight-team': 'Selecione a equipe de luta que representa sua empresa',\n    'company-fight-team-description': 'Escolha qual equipe de luta sua academia representa oficialmente em competições e eventos',\n    'student-registration': 'Registro de Estudantes',\n    'register-new-students': 'Registrar novos estudantes e gerenciar informações dos estudantes',\n    'modality-by-student': 'Plano de Treinamento de Luta',\n    'student-modality-management': 'Gerenciar atribuições de modalidade e planos de treinamento dos estudantes',\n    \n    // Training Plan specific translations\n    'fight-training-plan': 'Plano de Treinamento de Luta',\n    'view-modality-assignment-details': 'Ver Detalhes da Atribuição de Modalidade',\n    'training-progress': 'Progresso do Treinamento',\n    'share-progress': 'Compartilhar Progresso',\n    'share-progress-text': 'Confira meu progresso no treinamento!',\n    'progress-copied-to-clipboard': 'Progresso copiado para a área de transferência!',\n    'check-ins-progress': 'Progresso de Check-ins',\n    'check-ins-remaining': 'check-ins restantes',\n    'training-plan-overview': 'Visão Geral do Plano de Treinamento',\n    'plan-duration': 'Duração do Plano',\n    'assignment-date': 'Data de Atribuição',\n    'expected-closing-date': 'Data de Encerramento Esperada',\n    'remaining-days': 'Dias Restantes',\n    'target-progression': 'Progressão da Meta',\n    'current-belt': 'Faixa Atual',\n    'target-belt': 'Faixa Meta',\n    'total-stripes-degrees-start': 'Total de Graus/Faixas Início',\n    'expected-stripes-degrees-conclusions': 'Graus/Faixas Esperados Conclusão',\n    'training-frequency': 'Frequência de Treinamento',\n    'recommended-sessions': 'Sessões Recomendadas',\n    'expected-count-check-in': 'Contagem Esperada de Check-in',\n    'attendance-rate': 'Taxa de Frequência',\n    'performance-metrics': 'Métricas de Desempenho',\n    'assignment-information': 'Informações da Atribuição',\n    'connection-id': 'ID da Conexão',\n    'closing-date': 'Data de Encerramento',\n    'belt-level-at-start': 'Nível de Faixa no Início',\n    'belt-level-start-description': 'O nível de faixa do estudante quando este plano de treinamento foi atribuído',\n    'expected-closing-date-description': 'Data esperada quando este plano de treinamento deve ser concluído',\n    'check-ins-count': 'Contagem de Check-ins',\n    'check-ins': 'check-ins',\n    'from-to': 'De {startDate} até {endDate}',\n    'check-ins-count-description': 'Número total de check-ins esperados para este plano de treinamento',\n    'expected-check-in-description': 'Número esperado de check-ins para este plano de treinamento',\n    'expected-belt-at-closing': 'Faixa Esperada no Encerramento',\n    'adult-belts': 'Faixas Adultas',\n    'kids-belts-bjj': 'Faixas Infantis (BJJ)',\n    'kids-belts-judo': 'Faixas Infantis (Judo)',\n    'expected-belt-closing-description': 'Nível de faixa esperado quando este plano de treinamento for concluído',\n    'student-evaluation': 'Avaliação de Estudantes',\n    'evaluate-student-progress': 'Avaliar progresso e desempenho dos estudantes',\n    'student-attendance': 'Frequência dos Estudantes',\n    'track-student-attendance': 'Acompanhar frequência e participação dos estudantes',\n    \n    // Teachers page translations\n    'manage-teacher-activities': 'Gerenciar Atividades dos Professores',\n    'teacher-registration': 'Registro de Professores',\n    'register-new-teachers': 'Registrar novos professores e gerenciar informações dos professores',\n    'coach-registration': 'Registro de Treinadores',\n    'register-new-coaches': 'Registrar novos treinadores e gerenciar informações dos treinadores',\n    'teacher-profiles': 'Perfis dos Professores',\n    'view-manage-teacher-profiles': 'Visualizar e gerenciar perfis e informações dos professores',\n    'assign-teachers': 'Atribuir Professores',\n    'assign-teachers-to-classes-desc': 'Atribuir professores às aulas e gerenciar cronogramas de ensino',\n    'teacher-evaluations': 'Avaliações dos Professores',\n    'evaluate-teacher-performance': 'Avaliar desempenho dos professores e fornecer feedback',\n    \n    // Fight Plans page translations\n    'modality-management': 'Gerenciar modalidades e estilos de luta',\n    'training-phases': 'Fases de Treinamento',\n    \n    // Branches page translations\n    'branch-registration': 'Registro de Filiais',\n    'branch-facilities': 'Instalações das Filiais',\n    \n    // Fight Teams translations\n    'fight-teams': 'Equipes de Luta',\n    'manage-fight-teams': 'Gerenciar Equipes de Luta',\n    'new-fight-team': 'Nova Equipe de Luta',\n    'edit-fight-team': 'Editar Equipe de Luta',\n    'view-fight-team': 'Visualizar Equipe de Luta',\n    'edit-fight-team-description': 'Editar detalhes e informações da equipe de luta',\n    'view-fight-team-description': 'Visualizar informações e detalhes da equipe de luta',\n    'new-fight-team-description': 'Criar uma nova equipe de luta',\n    'back-to-teams': 'Voltar às Equipes',\n    'team-id': 'ID da Equipe',\n    'team-name': 'Nome da Equipe',\n    'team-name-placeholder': 'Digite o nome da equipe',\n    'coach': 'Técnico',\n    'select-coach': 'Selecionar Técnico',\n    'select-branch': 'Selecionar Filial',\n    'established-date': 'Data de Fundação',\n    'country-code': 'Código do País',\n    'country-code-placeholder': 'Digite o código do país (ex: BR, US, AE)',\n    'fight-modalities-description': 'Selecione as modalidades de luta que esta equipe apresenta (pode ser múltiplas)',\n    'max-team-size': 'Tamanho Máximo da Equipe',\n    'max-team-size-placeholder': 'Digite o tamanho máximo da equipe',\n    'team-description-placeholder': 'Digite a descrição da equipe',\n    'team-logo': 'Logo da Equipe',\n    'click-to-upload': 'Clique para enviar',\n    'or-drag-and-drop': 'ou arraste e solte',\n    'logo-upload-formats': 'PNG, JPG, GIF até 2MB',\n    'logo-preview': 'Visualização do Logo',\n    'team-logo-alt': 'Logo da Equipe',\n    'logo': 'Logo',\n    'file-too-large': 'Arquivo muito grande. Selecione uma imagem menor que 2MB.',\n    'invalid-file-type': 'Tipo de arquivo inválido. Selecione um arquivo de imagem.',\n    \n    // Championship Category Form\n    'view-category': 'Ver Categoria',\n    'new-category-description': 'Criar uma nova categoria de campeonato',\n    'edit-category-description': 'Editar detalhes da categoria de campeonato',\n    'view-category-description': 'Ver informações da categoria de campeonato',\n    'select-championship': 'Selecionar Campeonato',\n    'weight-category-placeholder': 'Digite a categoria de peso (ex: Leve, Médio)',\n    'weight-limit': 'Limite de Peso',\n    'weight-limit-placeholder': 'Digite o peso máximo em kg',\n    'weight-limit-help': 'Peso máximo permitido para esta categoria (opcional)',\n    'age-groups': 'Grupos de Idade',\n    'belts': 'Faixas',\n    'select-multiple-age-groups': 'Selecione um ou mais grupos de idade',\n    'select-multiple-belts': 'Selecione um ou mais níveis de faixa',\n    'select-multiple-fight-modalities': 'Selecione uma ou mais modalidades de luta',\n    'athlete-enrollment': 'Inscrição de Atletas',\n    'manage-athlete-enrollment': 'Gerenciar inscrições de atletas em campeonatos',\n    'athlete-enrollment-list': 'Lista de Inscrições de Atletas',\n    'view-enrolled-athletes': 'Visualizar atletas inscritos por campeonato e categoria',\n    'category-description-placeholder': 'Digite a descrição e regras da categoria',\n    'update-category': 'Atualizar Categoria',\n    'create-category': 'Criar Categoria',\n    'error-saving-category': 'Erro ao salvar categoria. Tente novamente.',\n    'team-members': 'Membros da Equipe',\n    'select-student': 'Selecionar Estudante',\n    'achievements': 'Conquistas',\n    'achievement-placeholder': 'Digite a conquista',\n    'contact-information': 'Informações de Contato',\n    'contact-email-placeholder': 'Digite o email de contato',\n    'contact-phone-placeholder': 'Digite o telefone de contato',\n    'notes-placeholder': 'Digite observações adicionais',\n    'active-team': 'Equipe Ativa',\n    'update-team': 'Atualizar Equipe',\n    'create-team': 'Criar Equipe',\n    'search-teams': 'Pesquisar equipes...',\n    'all-branches': 'Todas as Filiais',\n    'all-modalities': 'Todas as Modalidades',\n    'all-status': 'Todos os Status',\n    'team-size': 'Tamanho da Equipe',\n    'established': 'Fundada',\n    'no-teams-found': 'Nenhuma Equipe Encontrada',\n    'no-teams-found-description': 'Nenhuma equipe de luta corresponde aos filtros atuais',\n    'create-first-team': 'Criar Primeira Equipe',\n    'confirm-delete-team': 'Tem certeza de que deseja excluir esta equipe de luta?',\n    'fill-required-fields': 'Por favor, preencha todos os campos obrigatórios',\n    'remove': 'Remover',\n    \n    // Common actions\n    'new': 'Novo',\n    'edit': 'Editar',\n    'view': 'Visualizar',\n    'delete': 'Excluir',\n    'save': 'Salvar',\n    'cancel': 'Cancelar',\n    'back': 'Voltar',\n    'search': 'Pesquisar',\n    'filter': 'Filtrar',\n    'export': 'Exportar',\n    'import': 'Importar',\n    'loading': 'Carregando...',\n    'no-data': 'Nenhum dado encontrado',\n    'confirm-delete': 'Tem certeza de que deseja excluir este item?',\n    \n    // Championship module\n    'championship-registration': 'Registro de Campeonato',\n    'student-enrollment': 'Inscrição de Estudantes em Campeonatos',\n    'championship-results': 'Resultados de Campeonato',\n    'ranking-statistics': 'Ranking e Estatísticas',\n    'fight-associations': 'Associações de Luta',\n    'affiliations': 'Afiliações',\n    'championship-categories': 'Categorias de Campeonato',\n    'registrations': 'Inscrições',\n    'referees-officials': 'Árbitros / Oficiais',\n    'championship-sponsors': 'Patrocinadores de Campeonato',\n    'championship-qualified-locations': 'Locais Qualificados para Campeonatos',\n    \n    // Championship specific translations\n    'manage-championship-registrations': 'Gerenciar Registros de Campeonato',\n    'search-championships': 'Pesquisar campeonatos...',\n    'all-statuses': 'Todos os Status',\n    'association': 'Associação',\n    'all-associations': 'Todas as Associações',\n    'actions': 'Ações',\n    'no-championships-found': 'Nenhum Campeonato Encontrado',\n    'no-championships-found-description': 'Nenhum campeonato corresponde aos seus filtros atuais. Tente ajustar seus critérios de pesquisa ou criar um novo campeonato.',\n    'create-first-championship': 'Criar Primeiro Campeonato',\n    'confirm-delete-championship': 'Tem certeza de que deseja excluir este campeonato?',\n    \n    // Championship forms\n    'championship-id': 'ID do Campeonato',\n    'association-id': 'ID da Associação',\n    'championship-name': 'Nome do Campeonato',\n    'championship-location': 'Local',\n    'start-date': 'Data de Início',\n    'end-date': 'Data de Término',\n    'registration-deadline': 'Prazo de Inscrição',\n    'fight-modality': 'Modalidade de Luta',\n    'status': 'Status',\n    'upcoming': 'Próximo',\n    'ongoing': 'Em Andamento',\n    'completed': 'Concluído',\n    'cancelled': 'Cancelado',\n    'new-championship': 'Novo Campeonato',\n    'edit-championship': 'Editar Campeonato',\n    'edit-championship-description': 'Editar detalhes e informações do campeonato',\n    'new-championship-description': 'Criar um novo registro de campeonato',\n    'back-to-championships': 'Voltar aos Campeonatos',\n    'save-championship': 'Salvar Campeonato',\n    'select-association': 'Selecionar Associação',\n    'championship-name-placeholder': 'Digite o nome do campeonato',\n    'championship-location-placeholder': 'Digite o local do campeonato',\n    'select-modality': 'Selecionar Modalidade',\n    'additional-information': 'Informações Adicionais',\n    'max-participants': 'Máximo de Participantes',\n    'max-participants-placeholder': 'Digite o máximo de participantes',\n    'entry-fee': 'Taxa de Inscrição',\n    'entry-fee-placeholder': 'Digite o valor da taxa de inscrição',\n    'organizer': 'Organizador',\n    'organizer-placeholder': 'Digite o nome do organizador',\n    'contact-email': 'Email de Contato',\n    'contact-phone': 'Telefone de Contato',\n    'championship-description': 'Descrição do Campeonato',\n    'championship-description-placeholder': 'Digite a descrição do campeonato',\n    'select-qualified-location': 'Selecionar Local Qualificado',\n    \n    // Qualified Locations specific translations\n    'manage-qualified-locations': 'Gerenciar Locais Qualificados para Campeonatos',\n    'new-qualified-location': 'Novo Local Qualificado',\n    'edit-qualified-location': 'Editar Local Qualificado',\n    'edit-location-description': 'Editar detalhes e informações do local qualificado',\n    'new-location-description': 'Criar um novo local qualificado para campeonatos',\n    'back-to-locations': 'Voltar aos Locais Qualificados',\n    'save-location': 'Salvar Local',\n    'search-locations': 'Pesquisar locais...',\n    'location-id': 'ID do Local',\n    'location-name': 'Nome do Local',\n    'location-name-placeholder': 'Digite o nome do local',\n    'address-placeholder': 'Digite o endereço completo',\n    'city-placeholder': 'Digite o nome da cidade',\n    'state-placeholder': 'Digite o estado/província',\n    'country-placeholder': 'Digite o nome do país',\n    'postal-code': 'Código Postal',\n    'postal-code-placeholder': 'Digite o código postal/CEP',\n    'capacity': 'Capacidade',\n    'capacity-placeholder': 'Digite a capacidade máxima',\n    'facilities': 'Instalações',\n    'add-facility-placeholder': 'Adicionar instalação (ex: Arena Principal, Estacionamento)',\n    'add': 'Adicionar',\n    'contact-person': 'Pessoa de Contato',\n    'contact-person-placeholder': 'Digite o nome da pessoa de contato',\n    'certification-information': 'Informações de Certificação',\n    'certification-level': 'Nível de Certificação',\n    'certification-date': 'Data de Certificação',\n    'basic': 'Básico',\n    'intermediate': 'Intermediário',\n    'advanced': 'Avançado',\n    'premium': 'Premium',\n    'all-levels': 'Todos os Níveis',\n    'all-countries': 'Todos os Países',\n    'no-locations-found': 'Nenhum Local Qualificado Encontrado',\n    'no-locations-found-description': 'Nenhum local qualificado corresponde aos seus filtros atuais. Tente ajustar seus critérios de pesquisa ou criar um novo local qualificado.',\n    'create-first-location': 'Criar Primeiro Local Qualificado',\n    'confirm-delete-location': 'Tem certeza de que deseja excluir este local qualificado?',\n    'location-image': 'Imagem do Local',\n    'image-url-placeholder': 'Digite a URL da imagem (ex: https://exemplo.com/imagem.jpg)',\n    'image-preview': 'Visualização da Imagem',\n    'location-image-alt': 'Imagem do local',\n    'image': 'Imagem',\n    \n    // Affiliation forms\n    'affiliation-id': 'ID da Afiliação',\n    'student-id': 'ID do Estudante',\n    'membership-number': 'Número de Membro',\n    'affiliation-date': 'Data de Afiliação',\n    'notes': 'Observações',\n    'new-affiliation': 'Nova Afiliação',\n    'edit-affiliation': 'Editar Afiliação',\n    'save-affiliation': 'Salvar Afiliação',\n    \n    // Category forms\n    'category-id': 'ID da Categoria',\n    'age-group': 'Grupo Etário',\n    'weight-category': 'Categoria de Peso',\n    'gender': 'Gênero',\n    'mixed': 'Misto',\n    'all-belts': 'Todas as Faixas',\n    'new-category': 'Nova Categoria',\n    'edit-category': 'Editar Categoria',\n    'save-category': 'Salvar Categoria',\n    \n    // Registration forms\n    'registration-id': 'ID da Inscrição',\n    'teacher-id': 'ID do Professor',\n    'registration-date': 'Data de Inscrição',\n    'weight': 'Peso',\n    'payment-status': 'Status do Pagamento',\n    'medical-certificate': 'Atestado Médico',\n    'insurance-number': 'Número do Seguro',\n    'paid': 'Pago',\n    'pending': 'Pendente',\n    'refunded': 'Reembolsado',\n    'new-registration': 'Nova Inscrição',\n    'edit-registration': 'Editar Inscrição',\n    'save-registration': 'Salvar Inscrição',\n    \n    // Result forms\n    'result-id': 'ID do Resultado',\n    'position': 'Posição',\n    'points': 'Pontos',\n    'medal-type': 'Tipo de Medalha',\n    'gold': 'Ouro',\n    'silver': 'Prata',\n    'bronze': 'Bronze',\n    'none': 'Nenhuma',\n    '1st': '1º',\n    '2nd': '2º',\n    '3rd': '3º',\n    'new-result': 'Novo Resultado',\n    'edit-result': 'Editar Resultado',\n    'save-result': 'Salvar Resultado',\n    \n    // Official forms\n    'official-id': 'ID do Oficial',\n    'official-name': 'Nome do Oficial',\n    'official-level': 'Nível do Oficial',\n    'assigned-categories': 'Categorias Atribuídas',\n    'certification-number': 'Número da Certificação',\n    'certification-expiry': 'Expiração da Certificação',\n    'national': 'Nacional',\n    'international': 'Internacional',\n    'regional': 'Regional',\n    'local': 'Local',\n    'new-official': 'Novo Oficial',\n    'edit-official': 'Editar Oficial',\n    'save-official': 'Salvar Oficial',\n    \n    // Sponsor forms\n    'sponsor-id': 'ID do Patrocinador',\n    'sponsor-name': 'Nome do Patrocinador',\n    'sponsor-logo': 'Logo do Patrocinador',\n    'sponsor-link': 'Link do Patrocinador',\n    'sponsor-description': 'Descrição do Patrocinador',\n    'sponsor-type': 'Tipo de Patrocinador',\n    'contribution-amount': 'Valor da Contribuição',\n    'title': 'Título',\n    'supporting': 'Apoiador',\n    'new-sponsor': 'Novo Patrocinador',\n    'edit-sponsor': 'Editar Patrocinador',\n    'save-sponsor': 'Salvar Patrocinador',\n    \n    // Common fields\n    'name': 'Nome',\n    'description': 'Descrição',\n    'date': 'Data',\n    'time': 'Hora',\n    'location': 'Local',\n    'contact': 'Contato',\n    'email': 'Email',\n    'phone': 'Telefone',\n    'address': 'Endereço',\n    'active': 'Ativo',\n    'inactive': 'Inativo',\n    'all': 'Todos',\n    'select': 'Selecionar',\n    'required': 'Obrigatório',\n    'optional': 'Opcional',\n    \n    // Belt levels\n    'white-belt': 'Faixa Branca',\n    'blue-belt': 'Faixa Azul',\n    'purple-belt': 'Faixa Roxa',\n    'brown-belt': 'Faixa Marrom',\n    'black-belt': 'Faixa Preta',\n    \n    // Age groups\n    'adult': 'Adulto',\n    'kids': 'Crianças',\n    'master': 'Master',\n    'senior': 'Sênior',\n    \n    // Genders\n    'male': 'Masculino',\n    'female': 'Feminino',\n    'other': 'Outro',\n    'unisex': 'Unissex',\n    'womens-only': 'Apenas Mulheres',\n\n    // Fight Management\n    'fight-management': 'Gerenciamento de Lutas',\n    'manage-fight-phases': 'Gerenciar fases de luta e lutas individuais',\n    'fight-phases': 'Fases de Luta',\n    'manage-phases': 'Gerenciar fases de luta do campeonato',\n    'new-fight-phase': 'Nova Fase de Luta',\n    'edit-fight-phase': 'Editar Fase de Luta',\n    'view-fight-phase': 'Ver Fase de Luta',\n    'edit-phase-description': 'Editar detalhes e informações da fase de luta',\n    'new-phase-description': 'Criar uma nova fase de luta',\n    'view-phase-description': 'Ver informações da fase de luta',\n    'back-to-phases': 'Voltar às Fases de Luta',\n    'save-phase': 'Salvar Fase',\n    'search-phases': 'Buscar fases...',\n    'phase-id': 'ID da Fase',\n    'phase-name': 'Nome da Fase',\n    'phase-name-placeholder': 'Digite o nome da fase',\n    'phase-type': 'Tipo de Fase',\n    'select-phase-type': 'Selecionar Tipo de Fase',\n    'elimination': 'Eliminatória',\n    'round-robin': 'Todos contra Todos',\n    'bracket': 'Chave',\n    'pool': 'Grupo',\n    'phase-order': 'Ordem da Fase',\n    'phase-order-placeholder': 'Digite o número da ordem da fase',\n    'phase-start-date': 'Data de Início',\n    'phase-end-date': 'Data de Fim',\n    'phase-status': 'Status',\n    'select-phase-status': 'Selecionar Status',\n    'phase-description': 'Descrição',\n    'phase-description-placeholder': 'Digite a descrição da fase',\n    'phase-rules': 'Regras',\n    'phase-rules-placeholder': 'Digite as regras da fase',\n    'no-phases-found': 'Nenhuma fase encontrada',\n    'no-phases-found-description': 'Crie sua primeira fase de luta para começar',\n    'create-first-phase': 'Criar Primeira Fase',\n    'confirm-delete-phase': 'Tem certeza de que deseja excluir esta fase?',\n\n    // Individual Fights\n    'fights': 'Lutas',\n    'manage-fights': 'Gerenciar lutas individuais',\n    'new-fight': 'Nova Luta',\n    'edit-fight': 'Editar Luta',\n    'view-fight': 'Ver Luta',\n    'edit-fight-description': 'Editar detalhes e informações da luta',\n    'new-fight-description': 'Criar uma nova luta',\n    'view-fight-description': 'Ver informações da luta',\n    'back-to-fights': 'Voltar às Lutas',\n    'save-fight': 'Salvar Luta',\n    'search-fights': 'Buscar lutas...',\n    'fight-id': 'ID da Luta',\n    'fight-number': 'Número da Luta',\n    'fight-number-placeholder': 'Digite o número da luta',\n    'select-phase': 'Selecionar Fase',\n    'select-category': 'Selecionar Categoria',\n    'athlete1': 'Atleta 1',\n    'athlete2': 'Atleta 2',\n    'select-athlete1': 'Selecionar Atleta 1',\n    'select-athlete2': 'Selecionar Atleta 2',\n    'scheduled-time': 'Horário Agendado',\n    'actual-start-time': 'Horário Real de Início',\n    'actual-end-time': 'Horário Real de Fim',\n    'duration': 'Duração (minutos)',\n    'duration-placeholder': 'Digite a duração em minutos',\n    'fight-status': 'Status da Luta',\n    'select-fight-status': 'Selecionar Status da Luta',\n    'postponed': 'Adiado',\n    'fight-result': 'Resultado',\n    'select-result': 'Selecionar Resultado',\n    'athlete1-win': 'Vitória do Atleta 1',\n    'athlete2-win': 'Vitória do Atleta 2',\n    'draw': 'Empate',\n    'no-contest': 'Sem Conteste',\n    'winner': 'Vencedor',\n    'select-winner': 'Selecionar Vencedor',\n    'method': 'Método',\n    'select-method': 'Selecionar Método',\n    'submission': 'Finalização',\n    'decision': 'Decisão',\n    'disqualification': 'Desqualificação',\n    'injury': 'Lesão',\n    'forfeit': 'Desistência',\n    'score1': 'Pontuação 1',\n    'score2': 'Pontuação 2',\n    'score-placeholder': 'Digite a pontuação',\n    'referee': 'Árbitro',\n    'select-referee': 'Selecionar Árbitro',\n    'judge1': 'Juiz 1',\n    'judge2': 'Juiz 2',\n    'judge3': 'Juiz 3',\n    'select-judge': 'Selecionar Juiz',\n    'fight-notes': 'Notas',\n    'fight-notes-placeholder': 'Digite as notas da luta',\n    'video-url': 'URL do Vídeo',\n    'video-url-placeholder': 'Digite a URL do vídeo',\n    'no-fights-found': 'Nenhuma luta encontrada',\n    'no-fights-found-description': 'Crie sua primeira luta para começar',\n    'create-first-fight': 'Criar Primeira Luta',\n    'confirm-delete-fight': 'Tem certeza de que deseja excluir esta luta?',\n    \n    // Language Selector\n    'language-selector': 'Seletor de Idioma',\n    'select-language': 'Selecione seu idioma preferido',\n    'language': 'Idioma',\n    'english': 'Inglês',\n    'portuguese': 'Português'\n  },\n  \n  GER: {\n    // Basic navigation\n    'dashboard': 'Dashboard',\n    'students': 'Schüler',\n    'teachers-instructors': 'Lehrer & Ausbilder',\n    'championships': 'Meisterschaften',\n    'administration': 'Verwaltung',\n    \n    // Common actions\n    'new': 'Neu',\n    'edit': 'Bearbeiten',\n    'view': 'Anzeigen',\n    'delete': 'Löschen',\n    'save': 'Speichern',\n    'cancel': 'Abbrechen',\n    'back': 'Zurück',\n    'search': 'Suchen',\n    'filter': 'Filtern',\n    'export': 'Exportieren',\n    'import': 'Importieren',\n    'loading': 'Laden...',\n    'no-data': 'Keine Daten gefunden',\n    'confirm-delete': 'Sind Sie sicher, dass Sie dieses Element löschen möchten?',\n    \n    // Championship module\n    'championship-registration': 'Meisterschaftsregistrierung',\n    'student-enrollment': 'Schüleranmeldung zu Meisterschaften',\n    'championship-results': 'Meisterschaftsergebnisse',\n    'ranking-statistics': 'Ranking & Statistiken',\n    'fight-associations': 'Kampfverbände',\n    'affiliations': 'Zugehörigkeiten',\n    'championship-categories': 'Meisterschaftskategorien',\n    'registrations': 'Anmeldungen',\n    'referees-officials': 'Schiedsrichter / Offizielle',\n    'championship-sponsors': 'Meisterschaftssponsoren',\n    \n    // Common fields\n    'name': 'Name',\n    'description': 'Beschreibung',\n    'date': 'Datum',\n    'time': 'Zeit',\n    'location': 'Ort',\n    'contact': 'Kontakt',\n    'email': 'E-Mail',\n    'phone': 'Telefon',\n    'address': 'Adresse',\n    'active': 'Aktiv',\n    'inactive': 'Inaktiv',\n    'all': 'Alle',\n    'select': 'Auswählen',\n    'required': 'Erforderlich',\n    'optional': 'Optional',\n    \n    // Belt levels\n    'white-belt': 'Weißer Gürtel',\n    'blue-belt': 'Blauer Gürtel',\n    'purple-belt': 'Lila Gürtel',\n    'brown-belt': 'Brauner Gürtel',\n    'black-belt': 'Schwarzer Gürtel',\n    \n    // Age groups\n    'adult': 'Erwachsene',\n    'kids': 'Kinder',\n    'master': 'Master',\n    'senior': 'Senior',\n    \n    // Genders\n    'male': 'Männlich',\n    'female': 'Weiblich',\n    'other': 'Andere',\n    'unisex': 'Unisex',\n    'womens-only': 'Nur Frauen',\n    \n    // Teachers page translations\n    'teacher-registration': 'Lehrer-Registrierung',\n    'register-new-teachers': 'Neue Lehrer registrieren und Lehrerinformationen verwalten',\n    'coach-registration': 'Trainer-Registrierung',\n    'register-new-coaches': 'Neue Trainer registrieren und Trainerinformationen verwalten',\n    'athlete-enrollment': 'Athleten-Anmeldung',\n    'manage-athlete-enrollment': 'Athleten-Anmeldungen in Meisterschaften verwalten',\n    'athlete-enrollment-list': 'Athleten-Anmeldungsliste',\n    'view-enrolled-athletes': 'Angemeldete Athleten nach Meisterschaft und Kategorie anzeigen'\n  },\n  \n  FRA: {\n    // Basic navigation\n    'dashboard': 'Tableau de Bord',\n    'students': 'Étudiants',\n    'teachers-instructors': 'Professeurs & Instructeurs',\n    'championships': 'Championnats',\n    'administration': 'Administration',\n    \n    // Common actions\n    'new': 'Nouveau',\n    'edit': 'Modifier',\n    'view': 'Voir',\n    'delete': 'Supprimer',\n    'save': 'Enregistrer',\n    'cancel': 'Annuler',\n    'back': 'Retour',\n    'search': 'Rechercher',\n    'filter': 'Filtrer',\n    'export': 'Exporter',\n    'import': 'Importer',\n    'loading': 'Chargement...',\n    'no-data': 'Aucune donnée trouvée',\n    'confirm-delete': 'Êtes-vous sûr de vouloir supprimer cet élément?',\n    \n    // Championship module\n    'championship-registration': 'Inscription au Championnat',\n    'student-enrollment': 'Inscription des Étudiants aux Championnats',\n    'championship-results': 'Résultats du Championnat',\n    'ranking-statistics': 'Classement & Statistiques',\n    'fight-associations': 'Associations de Combat',\n    'affiliations': 'Affiliations',\n    'championship-categories': 'Catégories de Championnat',\n    'registrations': 'Inscriptions',\n    'referees-officials': 'Arbitres / Officiels',\n    'championship-sponsors': 'Sponsors du Championnat',\n    \n    // Common fields\n    'name': 'Nom',\n    'description': 'Description',\n    'date': 'Date',\n    'time': 'Heure',\n    'location': 'Lieu',\n    'contact': 'Contact',\n    'email': 'E-mail',\n    'phone': 'Téléphone',\n    'address': 'Adresse',\n    'active': 'Actif',\n    'inactive': 'Inactif',\n    'all': 'Tous',\n    'select': 'Sélectionner',\n    'required': 'Requis',\n    'optional': 'Optionnel',\n    \n    // Belt levels\n    'white-belt': 'Ceinture Blanche',\n    'blue-belt': 'Ceinture Bleue',\n    'purple-belt': 'Ceinture Violette',\n    'brown-belt': 'Ceinture Marron',\n    'black-belt': 'Ceinture Noire',\n    \n    // Age groups\n    'adult': 'Adulte',\n    'kids': 'Enfants',\n    'master': 'Master',\n    'senior': 'Senior',\n    \n    // Genders\n    'male': 'Masculin',\n    'female': 'Féminin',\n    'other': 'Autre',\n    'unisex': 'Unisexe',\n    'womens-only': 'Femmes Seulement',\n    'athlete-enrollment': 'Inscription des Athlètes',\n    'manage-athlete-enrollment': 'Gérer les inscriptions des athlètes aux championnats',\n    'athlete-enrollment-list': 'Liste des Inscriptions des Athlètes',\n    'view-enrolled-athletes': 'Voir les athlètes inscrits par championnat et catégorie'\n  },\n  \n  ESP: {\n    // Basic navigation\n    'dashboard': 'Panel de Control',\n    'students': 'Estudiantes',\n    'teachers-instructors': 'Profesores e Instructores',\n    'championships': 'Campeonatos',\n    'administration': 'Administración',\n    \n    // Common actions\n    'new': 'Nuevo',\n    'edit': 'Editar',\n    'view': 'Ver',\n    'delete': 'Eliminar',\n    'save': 'Guardar',\n    'cancel': 'Cancelar',\n    'back': 'Volver',\n    'search': 'Buscar',\n    'filter': 'Filtrar',\n    'export': 'Exportar',\n    'import': 'Importar',\n    'loading': 'Cargando...',\n    'no-data': 'No se encontraron datos',\n    'confirm-delete': '¿Está seguro de que desea eliminar este elemento?',\n    \n    // Championship module\n    'championship-registration': 'Registro de Campeonato',\n    'student-enrollment': 'Inscripción de Estudiantes en Campeonatos',\n    'championship-results': 'Resultados del Campeonato',\n    'ranking-statistics': 'Ranking y Estadísticas',\n    'fight-associations': 'Asociaciones de Lucha',\n    'affiliations': 'Afiliaciones',\n    'championship-categories': 'Categorías de Campeonato',\n    'registrations': 'Inscripciones',\n    'referees-officials': 'Árbitros / Oficiales',\n    'championship-sponsors': 'Patrocinadores del Campeonato',\n    \n    // Common fields\n    'name': 'Nombre',\n    'description': 'Descripción',\n    'date': 'Fecha',\n    'time': 'Hora',\n    'location': 'Ubicación',\n    'contact': 'Contacto',\n    'email': 'Correo Electrónico',\n    'phone': 'Teléfono',\n    'address': 'Dirección',\n    'active': 'Activo',\n    'inactive': 'Inactivo',\n    'all': 'Todos',\n    'select': 'Seleccionar',\n    'required': 'Requerido',\n    'optional': 'Opcional',\n    \n    // Belt levels\n    'white-belt': 'Cinturón Blanco',\n    'blue-belt': 'Cinturón Azul',\n    'purple-belt': 'Cinturón Morado',\n    'brown-belt': 'Cinturón Marrón',\n    'black-belt': 'Cinturón Negro',\n    \n    // Age groups\n    'adult': 'Adulto',\n    'kids': 'Niños',\n    'master': 'Master',\n    'senior': 'Senior',\n    \n    // Genders\n    'male': 'Masculino',\n    'female': 'Femenino',\n    'other': 'Otro',\n    'unisex': 'Unisex',\n    'womens-only': 'Solo Mujeres',\n    \n    // Teachers page translations\n    'teacher-registration': 'Registro de Profesores',\n    'register-new-teachers': 'Registrar nuevos profesores y gestionar información de profesores',\n    'coach-registration': 'Registro de Entrenadores',\n    'register-new-coaches': 'Registrar nuevos entrenadores y gestionar información de entrenadores',\n    'athlete-enrollment': 'Inscripción de Atletas',\n    'manage-athlete-enrollment': 'Gestionar inscripciones de atletas en campeonatos',\n    'athlete-enrollment-list': 'Lista de Inscripciones de Atletas',\n    'view-enrolled-athletes': 'Ver atletas inscritos por campeonato y categoría'\n  },\n  \n  JPN: {\n    // Basic navigation\n    'dashboard': 'ダッシュボード',\n    'students': '学生',\n    'teachers-instructors': '教師・インストラクター',\n    'championships': '選手権',\n    'administration': '管理',\n    \n    // Welcome messages\n    'welcome-admin': 'ようこそ、管理者',\n    'welcome-user': 'ようこそ、{name}',\n    \n    // Common actions\n    'new': '新規',\n    'edit': '編集',\n    'view': '表示',\n    'delete': '削除',\n    'save': '保存',\n    'cancel': 'キャンセル',\n    'back': '戻る',\n    'search': '検索',\n    'filter': 'フィルター',\n    'export': 'エクスポート',\n    'import': 'インポート',\n    'loading': '読み込み中...',\n    'no-data': 'データが見つかりません',\n    'confirm-delete': 'この項目を削除してもよろしいですか？',\n    \n    // Championship module\n    'championship-registration': '選手権登録',\n    'student-enrollment': '学生選手権登録',\n    'championship-results': '選手権結果',\n    'ranking-statistics': 'ランキング・統計',\n    'fight-associations': '格闘技協会',\n    'affiliations': '所属',\n    'championship-categories': '選手権カテゴリー',\n    'registrations': '登録',\n    'referees-officials': '審判・役員',\n    'championship-sponsors': '選手権スポンサー',\n    \n    // Common fields\n    'name': '名前',\n    'description': '説明',\n    'date': '日付',\n    'time': '時間',\n    'location': '場所',\n    'contact': '連絡先',\n    'email': 'メール',\n    'phone': '電話',\n    'address': '住所',\n    'active': 'アクティブ',\n    'inactive': '非アクティブ',\n    'all': 'すべて',\n    'select': '選択',\n    'required': '必須',\n    'optional': 'オプション',\n    \n    // Belt levels\n    'white-belt': '白帯',\n    'blue-belt': '青帯',\n    'purple-belt': '紫帯',\n    'brown-belt': '茶帯',\n    'black-belt': '黒帯',\n    \n    // Age groups\n    'adult': '大人',\n    'kids': '子供',\n    'master': 'マスター',\n    'senior': 'シニア',\n    \n    // Genders\n    'male': '男性',\n    'female': '女性',\n    'other': 'その他',\n    'unisex': 'ユニセックス',\n    'womens-only': '女性のみ',\n    \n    // Teachers page translations\n    'teacher-registration': '教師登録',\n    'register-new-teachers': '新しい教師を登録し、教師情報を管理する',\n    'coach-registration': 'コーチ登録',\n    'register-new-coaches': '新しいコーチを登録し、コーチ情報を管理する'\n  },\n  \n  ITA: {\n    // Basic navigation\n    'dashboard': 'Dashboard',\n    'students': 'Studenti',\n    'teachers-instructors': 'Insegnanti e Istruttori',\n    'championships': 'Campionati',\n    'administration': 'Amministrazione',\n    \n    // Common actions\n    'new': 'Nuovo',\n    'edit': 'Modifica',\n    'view': 'Visualizza',\n    'delete': 'Elimina',\n    'save': 'Salva',\n    'cancel': 'Annulla',\n    'back': 'Indietro',\n    'search': 'Cerca',\n    'filter': 'Filtra',\n    'export': 'Esporta',\n    'import': 'Importa',\n    'loading': 'Caricamento...',\n    'no-data': 'Nessun dato trovato',\n    'confirm-delete': 'Sei sicuro di voler eliminare questo elemento?',\n    \n    // Championship module\n    'championship-registration': 'Registrazione Campionato',\n    'student-enrollment': 'Iscrizione Studenti ai Campionati',\n    'championship-results': 'Risultati Campionato',\n    'ranking-statistics': 'Classifica e Statistiche',\n    'fight-associations': 'Associazioni di Combattimento',\n    'affiliations': 'Affiliazioni',\n    'championship-categories': 'Categorie Campionato',\n    'registrations': 'Registrazioni',\n    'referees-officials': 'Arbitri / Ufficiali',\n    'championship-sponsors': 'Sponsor del Campionato',\n    \n    // Common fields\n    'name': 'Nome',\n    'description': 'Descrizione',\n    'date': 'Data',\n    'time': 'Ora',\n    'location': 'Posizione',\n    'contact': 'Contatto',\n    'email': 'Email',\n    'phone': 'Telefono',\n    'address': 'Indirizzo',\n    'active': 'Attivo',\n    'inactive': 'Inattivo',\n    'all': 'Tutti',\n    'select': 'Seleziona',\n    'required': 'Richiesto',\n    'optional': 'Opzionale',\n    \n    // Belt levels\n    'white-belt': 'Cintura Bianca',\n    'blue-belt': 'Cintura Blu',\n    'purple-belt': 'Cintura Viola',\n    'brown-belt': 'Cintura Marrone',\n    'black-belt': 'Cintura Nera',\n    \n    // Age groups\n    'adult': 'Adulti',\n    'kids': 'Bambini',\n    'master': 'Master',\n    'senior': 'Senior',\n    \n    // Genders\n    'male': 'Maschio',\n    'female': 'Femmina',\n    'other': 'Altro',\n    'unisex': 'Unisex',\n    'womens-only': 'Solo Donne',\n    \n    // Teachers page translations\n    'teacher-registration': 'Registrazione Insegnanti',\n    'register-new-teachers': 'Registra nuovi insegnanti e gestisci informazioni insegnanti',\n    'coach-registration': 'Registrazione Allenatori',\n    'register-new-coaches': 'Registra nuovi allenatori e gestisci informazioni allenatori'\n  },\n  \n  RUS: {\n    // Basic navigation\n    'dashboard': 'Панель управления',\n    'students': 'Студенты',\n    'teachers-instructors': 'Преподаватели и Инструкторы',\n    'championships': 'Чемпионаты',\n    'administration': 'Администрация',\n    \n    // Common actions\n    'new': 'Новый',\n    'edit': 'Редактировать',\n    'view': 'Просмотр',\n    'delete': 'Удалить',\n    'save': 'Сохранить',\n    'cancel': 'Отмена',\n    'back': 'Назад',\n    'search': 'Поиск',\n    'filter': 'Фильтр',\n    'export': 'Экспорт',\n    'import': 'Импорт',\n    'loading': 'Загрузка...',\n    'no-data': 'Данные не найдены',\n    'confirm-delete': 'Вы уверены, что хотите удалить этот элемент?',\n    \n    // Championship module\n    'championship-registration': 'Регистрация Чемпионата',\n    'student-enrollment': 'Регистрация Студентов в Чемпионатах',\n    'championship-results': 'Результаты Чемпионата',\n    'ranking-statistics': 'Рейтинг и Статистика',\n    'fight-associations': 'Боевые Ассоциации',\n    'affiliations': 'Принадлежности',\n    'championship-categories': 'Категории Чемпионата',\n    'registrations': 'Регистрации',\n    'referees-officials': 'Судьи / Официальные лица',\n    'championship-sponsors': 'Спонсоры Чемпионата',\n    \n    // Common fields\n    'name': 'Имя',\n    'description': 'Описание',\n    'date': 'Дата',\n    'time': 'Время',\n    'location': 'Местоположение',\n    'contact': 'Контакт',\n    'email': 'Электронная почта',\n    'phone': 'Телефон',\n    'address': 'Адрес',\n    'active': 'Активный',\n    'inactive': 'Неактивный',\n    'all': 'Все',\n    'select': 'Выбрать',\n    'required': 'Обязательно',\n    'optional': 'Необязательно',\n    \n    // Belt levels\n    'white-belt': 'Белый Пояс',\n    'blue-belt': 'Синий Пояс',\n    'purple-belt': 'Фиолетовый Пояс',\n    'brown-belt': 'Коричневый Пояс',\n    'black-belt': 'Черный Пояс',\n    \n    // Age groups\n    'adult': 'Взрослые',\n    'kids': 'Дети',\n    'master': 'Мастер',\n    'senior': 'Сеньор',\n    \n    // Genders\n    'male': 'Мужской',\n    'female': 'Женский',\n    'other': 'Другой',\n    'unisex': 'Унисекс',\n    'womens-only': 'Только Женщины',\n    \n    // Teachers page translations\n    'teacher-registration': 'Регистрация Преподавателей',\n    'register-new-teachers': 'Зарегистрировать новых преподавателей и управлять информацией преподавателей',\n    'coach-registration': 'Регистрация Тренеров',\n    'register-new-coaches': 'Зарегистрировать новых тренеров и управлять информацией тренеров'\n  },\n  \n  ARA: {\n    // Basic navigation\n    'dashboard': 'لوحة التحكم',\n    'students': 'الطلاب',\n    'teachers-instructors': 'المعلمون والمدرسون',\n    'championships': 'البطولات',\n    'administration': 'الإدارة',\n    \n    // Common actions\n    'new': 'جديد',\n    'edit': 'تعديل',\n    'view': 'عرض',\n    'delete': 'حذف',\n    'save': 'حفظ',\n    'cancel': 'إلغاء',\n    'back': 'رجوع',\n    'search': 'بحث',\n    'filter': 'تصفية',\n    'export': 'تصدير',\n    'import': 'استيراد',\n    'loading': 'جاري التحميل...',\n    'no-data': 'لم يتم العثور على بيانات',\n    'confirm-delete': 'هل أنت متأكد من أنك تريد حذف هذا العنصر؟',\n    \n    // Championship module\n    'championship-registration': 'تسجيل البطولة',\n    'student-enrollment': 'تسجيل الطلاب في البطولات',\n    'championship-results': 'نتائج البطولة',\n    'ranking-statistics': 'التصنيف والإحصائيات',\n    'fight-associations': 'جمعيات القتال',\n    'affiliations': 'الانتماءات',\n    'championship-categories': 'فئات البطولة',\n    'registrations': 'التسجيلات',\n    'referees-officials': 'الحكام / المسؤولون',\n    'championship-sponsors': 'رعاة البطولة',\n    \n    // Common fields\n    'name': 'الاسم',\n    'description': 'الوصف',\n    'date': 'التاريخ',\n    'time': 'الوقت',\n    'location': 'الموقع',\n    'contact': 'جهة الاتصال',\n    'email': 'البريد الإلكتروني',\n    'phone': 'الهاتف',\n    'address': 'العنوان',\n    'active': 'نشط',\n    'inactive': 'غير نشط',\n    'all': 'الكل',\n    'select': 'اختيار',\n    'required': 'مطلوب',\n    'optional': 'اختياري',\n    \n    // Belt levels\n    'white-belt': 'الحزام الأبيض',\n    'blue-belt': 'الحزام الأزرق',\n    'purple-belt': 'الحزام البنفسجي',\n    'brown-belt': 'الحزام البني',\n    'black-belt': 'الحزام الأسود',\n    \n    // Age groups\n    'adult': 'البالغون',\n    'kids': 'الأطفال',\n    'master': 'الماجستير',\n    'senior': 'كبار السن',\n    \n    // Genders\n    'male': 'ذكر',\n    'female': 'أنثى',\n    'other': 'آخر',\n    'unisex': 'للجنسين',\n    'womens-only': 'للنساء فقط',\n    \n    // Teachers page translations\n    'teacher-registration': 'تسجيل المعلمين',\n    'register-new-teachers': 'تسجيل معلمين جدد وإدارة معلومات المعلمين',\n    'coach-registration': 'تسجيل المدربين',\n    'register-new-coaches': 'تسجيل مدربين جدد وإدارة معلومات المدربين'\n  },\n  \n  KOR: {\n    // Basic navigation\n    'dashboard': '대시보드',\n    'students': '학생',\n    'teachers-instructors': '교사 및 강사',\n    'championships': '챔피언십',\n    'administration': '관리',\n    \n    // Common actions\n    'new': '새로 만들기',\n    'edit': '편집',\n    'view': '보기',\n    'delete': '삭제',\n    'save': '저장',\n    'cancel': '취소',\n    'back': '뒤로',\n    'search': '검색',\n    'filter': '필터',\n    'export': '내보내기',\n    'import': '가져오기',\n    'loading': '로딩 중...',\n    'no-data': '데이터를 찾을 수 없습니다',\n    'confirm-delete': '이 항목을 삭제하시겠습니까?',\n    \n    // Championship module\n    'championship-registration': '챔피언십 등록',\n    'student-enrollment': '학생 챔피언십 등록',\n    'championship-results': '챔피언십 결과',\n    'ranking-statistics': '순위 및 통계',\n    'fight-associations': '격투 협회',\n    'affiliations': '소속',\n    'championship-categories': '챔피언십 카테고리',\n    'registrations': '등록',\n    'referees-officials': '심판 / 공무원',\n    'championship-sponsors': '챔피언십 스폰서',\n    \n    // Common fields\n    'name': '이름',\n    'description': '설명',\n    'date': '날짜',\n    'time': '시간',\n    'location': '위치',\n    'contact': '연락처',\n    'email': '이메일',\n    'phone': '전화',\n    'address': '주소',\n    'active': '활성',\n    'inactive': '비활성',\n    'all': '모두',\n    'select': '선택',\n    'required': '필수',\n    'optional': '선택사항',\n    \n    // Belt levels\n    'white-belt': '흰색 벨트',\n    'blue-belt': '파란색 벨트',\n    'purple-belt': '보라색 벨트',\n    'brown-belt': '갈색 벨트',\n    'black-belt': '검은색 벨트',\n    \n    // Age groups\n    'adult': '성인',\n    'kids': '어린이',\n    'master': '마스터',\n    'senior': '시니어',\n    \n    // Genders\n    'male': '남성',\n    'female': '여성',\n    'other': '기타',\n    'unisex': '유니섹스',\n    'womens-only': '여성 전용',\n    \n    // Teachers page translations\n    'teacher-registration': '교사 등록',\n    'register-new-teachers': '새 교사를 등록하고 교사 정보를 관리합니다',\n    'coach-registration': '코치 등록',\n    'register-new-coaches': '새 코치를 등록하고 코치 정보를 관리합니다'\n  }\n}\n\ninterface LanguageProviderProps {\n  children: ReactNode;\n  initialLanguage?: Language;\n}\n\nexport const LanguageProvider: React.FC<LanguageProviderProps> = ({ children, initialLanguage = 'PTB' }) => {\n  const [language, setLanguage] = useState<Language>(initialLanguage)\n  const [isInitialized, setIsInitialized] = useState(false)\n\n  useEffect(() => {\n    try {\n      // Check for selectedLanguage first (from Welcome page), then fallback to language\n      const selectedLanguage = localStorage.getItem('selectedLanguage') as Language\n      const savedLanguage = localStorage.getItem('language') as Language\n      const validLanguages: Language[] = ['ENU', 'PTB', 'GER', 'FRA', 'ESP', 'JPN', 'ITA', 'RUS', 'ARA', 'KOR']\n      \n      // Use selectedLanguage if available, otherwise use savedLanguage, otherwise use initialLanguage\n      const languageToUse = selectedLanguage || savedLanguage || initialLanguage\n      \n      if (languageToUse && validLanguages.includes(languageToUse)) {\n        setLanguage(languageToUse)\n      } else if (languageToUse) {\n        console.warn(`Invalid saved language: ${languageToUse}, using default: ${initialLanguage}`)\n      }\n    } catch (error) {\n      console.error('Error loading language from localStorage:', error)\n    } finally {\n      setIsInitialized(true)\n    }\n  }, [initialLanguage])\n\n  useEffect(() => {\n    if (isInitialized) {\n      try {\n        localStorage.setItem('language', language)\n        localStorage.setItem('selectedLanguage', language)\n      } catch (error) {\n        console.error('Error saving language to localStorage:', error)\n      }\n    }\n  }, [language, isInitialized])\n\n  const t = (key: string): string => {\n    try {\n      // Ensure language is valid and translations exist\n      if (!language || !translations[language]) {\n        console.warn(`Invalid language: ${language}, falling back to ENU`)\n        return translations['ENU']?.[key] || key\n      }\n      \n      const translation = translations[language][key]\n      if (translation === undefined) {\n        console.warn(`Missing translation for key: ${key} in language: ${language}`)\n        return key\n      }\n      \n      return translation\n    } catch (error) {\n      console.error('Error in translation function:', error)\n      return key\n    }\n  }\n\n  return (\n    <LanguageContext.Provider value={{ language, setLanguage, t }}>\n      {children}\n    </LanguageContext.Provider>\n  )\n}\n\nexport const useLanguage = (): LanguageContextType => {\n  const context = useContext(LanguageContext)\n  if (context === undefined) {\n    throw new Error('useLanguage must be used within a LanguageProvider')\n  }\n  return context\n}","import { ApiResponse, UserRole, LoginCredentials, RegisterData, AuthResult } from '../types/api';\n\nconst API_BASE_URL = 'https://oss365.app/api';\n\n// Login response interface for our backend\ninterface LoginResponse {\n  success: boolean;\n  token: string;\n  user: {\n    id: string;\n    email: string;\n    role: string;\n    tenantId: string;\n    firstName: string;\n    lastName: string;\n  };\n}\n\n// API Client class\nclass ApiClient {\n  private baseURL: string;\n  private accessToken: string | null = null;\n  private refreshToken: string | null = null;\n\n  constructor(baseURL: string) {\n    this.baseURL = baseURL;\n    this.loadTokensFromStorage();\n  }\n\n  // Token management\n  private loadTokensFromStorage(): void {\n    this.accessToken = localStorage.getItem('accessToken');\n    this.refreshToken = localStorage.getItem('refreshToken');\n  }\n\n  private saveTokensToStorage(accessToken: string, refreshToken: string): void {\n    this.accessToken = accessToken;\n    this.refreshToken = refreshToken;\n    localStorage.setItem('accessToken', accessToken);\n    localStorage.setItem('refreshToken', refreshToken);\n  }\n\n  private clearTokensFromStorage(): void {\n    this.accessToken = null;\n    this.refreshToken = null;\n    localStorage.removeItem('accessToken');\n    localStorage.removeItem('refreshToken');\n  }\n\n  // HTTP methods\n  private async request<T>(\n    endpoint: string,\n    options: RequestInit = {}\n  ): Promise<ApiResponse<T>> {\n    const url = `${this.baseURL}${endpoint}`;\n    \n    const headers: Record<string, string> = {\n      'Content-Type': 'application/json',\n      ...(options.headers as Record<string, string>),\n    };\n\n    if (this.accessToken) {\n      headers.Authorization = `Bearer ${this.accessToken}`;\n    }\n\n    try {\n      const response = await fetch(url, {\n        ...options,\n        headers,\n      });\n\n      const data = await response.json();\n\n      if (!response.ok) {\n        // Handle token refresh for 401 errors\n        if (response.status === 401 && this.refreshToken && endpoint !== '/auth/refresh') {\n          const refreshed = await this.refreshAccessToken();\n          if (refreshed) {\n            // Retry the original request with new token\n            (headers as Record<string, string>).Authorization = `Bearer ${this.accessToken}`;\n            const retryResponse = await fetch(url, {\n              ...options,\n              headers,\n            });\n            return await retryResponse.json();\n          }\n        }\n        throw new Error(data.error || 'Request failed');\n      }\n\n      return data;\n    } catch (error) {\n      console.error('API request failed:', error);\n      throw error;\n    }\n  }\n\n  // Authentication methods\n  async login(credentials: LoginCredentials): Promise<AuthResult> {\n    // For now, use mock authentication for Elite Combat Academy\n    if (credentials.tenantDomain === 'elite-combat.jiu-jitsu.com' && \n        credentials.email === 'admin@elite-combat.com' && \n        credentials.password === 'EliteAdmin2024!') {\n      \n      const mockToken = btoa(JSON.stringify({\n        userId: 'admin-123',\n        tenantId: 'elite-combat-123',\n        role: 'system_manager',\n        email: credentials.email\n      }));\n\n      const mockUser = {\n        id: 'admin-123',\n        tenant_id: 'elite-combat-123',\n        email: credentials.email,\n        first_name: 'Admin',\n        last_name: 'User',\n        phone: '',\n        role: 'system_manager' as any,\n        status: 'active' as any,\n        branch_id: '',\n        avatar_url: '',\n        last_login: new Date().toISOString(),\n        email_verified: true,\n        created_at: new Date().toISOString(),\n        updated_at: new Date().toISOString()\n      };\n\n      const mockTenant = {\n        id: 'elite-combat-123',\n        name: 'Elite Combat Academy',\n        domain: credentials.tenantDomain,\n        plan: 'enterprise' as any,\n        license_start: new Date().toISOString(),\n        license_end: new Date(Date.now() + 365 * 24 * 60 * 60 * 1000).toISOString(),\n        is_active: true,\n        settings: {},\n        contact_email: credentials.email,\n        contact_phone: '',\n        address: '',\n        logo_url: '',\n        created_at: new Date().toISOString(),\n        updated_at: new Date().toISOString()\n      };\n\n      // Store tokens\n      localStorage.setItem('accessToken', mockToken);\n      localStorage.setItem('refreshToken', mockToken);\n\n      return {\n        user: mockUser,\n        tenant: mockTenant,\n        accessToken: mockToken,\n        refreshToken: mockToken\n      };\n    }\n\n    // For other credentials, try the real API\n    const backendCredentials = {\n      domain: credentials.tenantDomain,\n      email: credentials.email,\n      password: credentials.password\n    };\n\n    const response = await this.request<LoginResponse>('/auth/login', {\n      method: 'POST',\n      body: JSON.stringify(backendCredentials),\n    });\n\n    // Our backend returns the data directly, not wrapped in a data property\n    if (response.success && response.data?.token) {\n      // Store the token (our backend uses 'token' instead of 'accessToken')\n      localStorage.setItem('accessToken', response.data.token);\n      localStorage.setItem('refreshToken', response.data.token); // Use same token for both\n    }\n\n    // Return in the expected format\n    return {\n      user: response.data?.user || {} as any,\n      tenant: {\n        id: response.data?.user?.tenantId || '',\n        name: '',\n        domain: credentials.tenantDomain,\n        plan: 'enterprise' as any,\n        license_start: new Date().toISOString(),\n        license_end: new Date(Date.now() + 365 * 24 * 60 * 60 * 1000).toISOString(),\n        is_active: true,\n        settings: {},\n        contact_email: response.data?.user?.email || '',\n        contact_phone: '',\n        address: '',\n        logo_url: '',\n        created_at: new Date().toISOString(),\n        updated_at: new Date().toISOString()\n      },\n      accessToken: response.data?.token || '',\n      refreshToken: response.data?.token || ''\n    };\n  }\n\n  async register(data: RegisterData): Promise<AuthResult> {\n    const response = await this.request<AuthResult>('/auth/register', {\n      method: 'POST',\n      body: JSON.stringify(data),\n    });\n\n    if (response.success && response.data) {\n      this.saveTokensToStorage(response.data.accessToken, response.data.refreshToken);\n    }\n\n    return response.data!;\n  }\n\n  async logout(): Promise<void> {\n    try {\n      await this.request('/auth/logout', {\n        method: 'POST',\n      });\n    } finally {\n      this.clearTokensFromStorage();\n    }\n  }\n\n  async refreshAccessToken(): Promise<boolean> {\n    if (!this.refreshToken) {\n      return false;\n    }\n\n    try {\n      const response = await this.request<{ accessToken: string; refreshToken: string }>('/auth/refresh', {\n        method: 'POST',\n        body: JSON.stringify({ refreshToken: this.refreshToken }),\n      });\n\n      if (response.success && response.data) {\n        this.saveTokensToStorage(response.data.accessToken, response.data.refreshToken);\n        return true;\n      }\n    } catch (error) {\n      console.error('Token refresh failed:', error);\n      this.clearTokensFromStorage();\n    }\n\n    return false;\n  }\n\n  async getCurrentUser(): Promise<any> {\n    const response = await this.request('/auth/me');\n    return response.data;\n  }\n\n  // User management\n  async getUsers(params: {\n    page?: number;\n    limit?: number;\n    search?: string;\n    status?: string;\n    role?: UserRole;\n    branchId?: string;\n  } = {}): Promise<ApiResponse> {\n    const queryParams = new URLSearchParams();\n    Object.entries(params).forEach(([key, value]) => {\n      if (value !== undefined) {\n        queryParams.append(key, value.toString());\n      }\n    });\n\n    return this.request(`/users?${queryParams.toString()}`);\n  }\n\n  async getUser(id: string): Promise<any> {\n    const response = await this.request(`/users/${id}`);\n    return response.data;\n  }\n\n  async createUser(userData: any): Promise<any> {\n    const response = await this.request('/users', {\n      method: 'POST',\n      body: JSON.stringify(userData),\n    });\n    return response.data;\n  }\n\n  async updateUser(id: string, userData: any): Promise<any> {\n    const response = await this.request(`/users/${id}`, {\n      method: 'PUT',\n      body: JSON.stringify(userData),\n    });\n    return response.data;\n  }\n\n  async deleteUser(id: string): Promise<void> {\n    await this.request(`/users/${id}`, {\n      method: 'DELETE',\n    });\n  }\n\n  // Class management\n  async getClasses(params: {\n    page?: number;\n    limit?: number;\n    search?: string;\n    branchId?: string;\n    coachId?: string;\n  } = {}): Promise<ApiResponse> {\n    const queryParams = new URLSearchParams();\n    Object.entries(params).forEach(([key, value]) => {\n      if (value !== undefined) {\n        queryParams.append(key, value.toString());\n      }\n    });\n\n    return this.request(`/classes?${queryParams.toString()}`);\n  }\n\n  async getClass(id: string): Promise<any> {\n    const response = await this.request(`/classes/${id}`);\n    return response.data;\n  }\n\n  async createClass(classData: any): Promise<any> {\n    const response = await this.request('/classes', {\n      method: 'POST',\n      body: JSON.stringify(classData),\n    });\n    return response.data;\n  }\n\n  async updateClass(id: string, classData: any): Promise<any> {\n    const response = await this.request(`/classes/${id}`, {\n      method: 'PUT',\n      body: JSON.stringify(classData),\n    });\n    return response.data;\n  }\n\n  async deleteClass(id: string): Promise<void> {\n    await this.request(`/classes/${id}`, {\n      method: 'DELETE',\n    });\n  }\n\n  // Public endpoints\n  async getPublicClasses(tenantDomain: string, branchId?: string): Promise<any[]> {\n    const params = new URLSearchParams({ tenantDomain });\n    if (branchId) {\n      params.append('branchId', branchId);\n    }\n\n    const response = await this.request<any[]>(`/public/classes?${params.toString()}`);\n    return response.data || [];\n  }\n\n  async getPublicBranches(tenantDomain: string): Promise<any[]> {\n    const response = await this.request<any[]>(`/public/branches?tenantDomain=${encodeURIComponent(tenantDomain)}`);\n    return response.data || [];\n  }\n\n  async getPublicTenantInfo(tenantDomain: string): Promise<any> {\n    const response = await this.request(`/public/tenant-info?tenantDomain=${encodeURIComponent(tenantDomain)}`);\n    return response.data;\n  }\n\n  async createBooking(bookingData: {\n    firstName: string;\n    lastName: string;\n    email: string;\n    phone: string;\n    classId: string;\n    branchId: string;\n    tenantDomain: string;\n    notes?: string;\n    preferredContactMethod: 'email' | 'phone';\n  }): Promise<any> {\n    const response = await this.request('/public/bookings', {\n      method: 'POST',\n      body: JSON.stringify(bookingData),\n    });\n    return response.data;\n  }\n\n  // Utility methods\n  isAuthenticated(): boolean {\n    return !!this.accessToken;\n  }\n\n  getAccessToken(): string | null {\n    return this.accessToken;\n  }\n\n  getRefreshToken(): string | null {\n    return this.refreshToken;\n  }\n}\n\n// Create and export API client instance\nexport const apiClient = new ApiClient(API_BASE_URL);\n\n// Export types (re-export from types/api.ts)\nexport type { ApiResponse, LoginCredentials, RegisterData, AuthResult } from '../types/api';\n","import React, { createContext, useContext, useState, useEffect, ReactNode, useRef } from 'react'\nimport { apiClient } from '../services/api'\nimport type { LoginCredentials, RegisterData, AuthResult, User, Tenant, UserRole } from '../types/api'\n\ninterface AuthContextType {\n  // State\n  user: User | null;\n  tenant: Tenant | null;\n  isAuthenticated: boolean;\n  isLoading: boolean;\n  error: string | null;\n\n  // Actions\n  login: (credentials: LoginCredentials) => Promise<void>;\n  register: (data: RegisterData) => Promise<void>;\n  logout: () => Promise<void>;\n  refreshUser: () => Promise<void>;\n  clearError: () => void;\n\n  // Utilities\n  hasRole: (role: UserRole) => boolean;\n  hasAnyRole: (roles: UserRole[]) => boolean;\n  canAccess: (requiredRole: UserRole) => boolean;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport const useAuth = (): AuthContextType => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\ninterface AuthProviderProps {\n  children: ReactNode;\n}\n\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [tenant, setTenant] = useState<Tenant | null>(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  \n  // Inactivity timeout (5 minutes)\n  const INACTIVITY_TIMEOUT = 5 * 60 * 1000; // 5 minutes in milliseconds\n  const inactivityTimerRef = useRef<NodeJS.Timeout | null>(null);\n  const lastActivityRef = useRef<number>(Date.now());\n\n  // Initialize auth state on mount\n  useEffect(() => {\n    initializeAuth();\n    setupInactivityTracking();\n    \n    return () => {\n      if (inactivityTimerRef.current) {\n        clearTimeout(inactivityTimerRef.current);\n      }\n    };\n  }, []);\n\n  // Cleanup inactivity tracking on unmount\n  useEffect(() => {\n    return () => {\n      const events = ['mousedown', 'mousemove', 'keypress', 'scroll', 'touchstart', 'click'];\n      events.forEach(event => {\n        document.removeEventListener(event, () => {}, true);\n      });\n      if (inactivityTimerRef.current) {\n        clearTimeout(inactivityTimerRef.current);\n      }\n    };\n  }, []);\n\n  const initializeAuth = async (): Promise<void> => {\n    try {\n      setIsLoading(true);\n      \n      // Check localStorage for saved auth data\n      const savedAuth = localStorage.getItem('auth_data');\n      if (savedAuth) {\n        try {\n          const authData = JSON.parse(savedAuth);\n          const { user: savedUser, tenant: savedTenant, timestamp } = authData;\n          \n          // Check if the saved data is not too old (24 hours)\n          const isExpired = Date.now() - timestamp > 24 * 60 * 60 * 1000;\n          \n          if (!isExpired && savedUser && savedTenant) {\n            setUser(savedUser);\n            setTenant(savedTenant);\n            setIsAuthenticated(true);\n            return;\n          } else {\n            // Clear expired data\n            localStorage.removeItem('auth_data');\n          }\n        } catch (parseError) {\n          console.error('Failed to parse saved auth data:', parseError);\n          localStorage.removeItem('auth_data');\n        }\n      }\n      \n      // Fallback to API client check\n      if (apiClient.isAuthenticated()) {\n        const userData = await apiClient.getCurrentUser();\n        if (userData) {\n          setUser(userData.user);\n          setTenant(userData.tenant);\n          setIsAuthenticated(true);\n          // Save to localStorage\n          saveAuthToStorage(userData.user, userData.tenant);\n        }\n      }\n    } catch (error) {\n      console.error('Auth initialization failed:', error);\n      // Clear invalid tokens\n      await logout();\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const saveAuthToStorage = (user: User, tenant: Tenant): void => {\n    const authData = {\n      user,\n      tenant,\n      timestamp: Date.now()\n    };\n    localStorage.setItem('auth_data', JSON.stringify(authData));\n  };\n\n  const clearAuthFromStorage = (): void => {\n    localStorage.removeItem('auth_data');\n  };\n\n  const setupInactivityTracking = (): void => {\n    const resetInactivityTimer = () => {\n      lastActivityRef.current = Date.now();\n      \n      if (inactivityTimerRef.current) {\n        clearTimeout(inactivityTimerRef.current);\n      }\n      \n      if (isAuthenticated) {\n        inactivityTimerRef.current = setTimeout(() => {\n          console.log('User inactive for 5 minutes, logging out...');\n          logout();\n        }, INACTIVITY_TIMEOUT);\n      }\n    };\n\n    // Track user activity\n    const events = ['mousedown', 'mousemove', 'keypress', 'scroll', 'touchstart', 'click'];\n    \n    events.forEach(event => {\n      document.addEventListener(event, resetInactivityTimer, true);\n    });\n\n    // Initial timer setup\n    resetInactivityTimer();\n  };\n\n  const login = async (credentials: LoginCredentials): Promise<void> => {\n    try {\n      setIsLoading(true);\n      setError(null);\n\n      const result: AuthResult = await apiClient.login(credentials);\n      \n      setUser(result.user);\n      setTenant(result.tenant);\n      setIsAuthenticated(true);\n      \n      // Save to localStorage for persistence\n      saveAuthToStorage(result.user, result.tenant);\n      \n      // Store test data for tubaraobjj.com tenant\n      if (result.tenant && result.tenant.id === 'tubaraobjj-tenant') {\n        const testData = {\n          students: [{\n            id: 'student_1',\n            tenantId: 'tubaraobjj-tenant',\n            studentId: 'STU001',\n            firstName: 'Antonio',\n            lastName: 'Vasconcelos',\n            displayName: 'Antonio Vasconcelos',\n            birthDate: '1989-01-01',\n            gender: 'male',\n            beltLevel: 'blue',\n            documentId: '12345678901',\n            email: 'tonisvasconcelos@hotmail.com',\n            phone: '21998010725',\n            branchId: 'main-branch',\n            active: true,\n            isKidsStudent: false,\n            weight: 117,\n            weightDivisionId: 'ultra-heavy',\n            photoUrl: '',\n            preferredLanguage: 'PTB',\n            createdAt: new Date().toISOString(),\n            updatedAt: new Date().toISOString()\n          }]\n        };\n        localStorage.setItem('testData', JSON.stringify(testData));\n      }\n      \n      // Reset inactivity timer\n      lastActivityRef.current = Date.now();\n    } catch (error: any) {\n      setError(error.message || 'Login failed');\n      throw error;\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const register = async (data: RegisterData): Promise<void> => {\n    try {\n      setIsLoading(true);\n      setError(null);\n\n      const result: AuthResult = await apiClient.register(data);\n      \n      setUser(result.user);\n      setTenant(result.tenant);\n      setIsAuthenticated(true);\n    } catch (error: any) {\n      setError(error.message || 'Registration failed');\n      throw error;\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const logout = async (): Promise<void> => {\n    try {\n      await apiClient.logout();\n    } catch (error) {\n      console.error('Logout error:', error);\n    } finally {\n      setUser(null);\n      setTenant(null);\n      setIsAuthenticated(false);\n      setError(null);\n      \n      // Clear from localStorage\n      clearAuthFromStorage();\n      \n      // Clear inactivity timer\n      if (inactivityTimerRef.current) {\n        clearTimeout(inactivityTimerRef.current);\n        inactivityTimerRef.current = null;\n      }\n    }\n  };\n\n  const refreshUser = async (): Promise<void> => {\n    try {\n      if (apiClient.isAuthenticated()) {\n        const userData = await apiClient.getCurrentUser();\n        if (userData) {\n          setUser(userData.user);\n          setTenant(userData.tenant);\n        }\n      }\n    } catch (error) {\n      console.error('Failed to refresh user:', error);\n      await logout();\n    }\n  };\n\n  const clearError = (): void => {\n    setError(null);\n  };\n\n  // Role checking utilities\n  const hasRole = (role: UserRole): boolean => {\n    return user?.role === role;\n  };\n\n  const hasAnyRole = (roles: UserRole[]): boolean => {\n    return user ? roles.includes(user.role) : false;\n  };\n\n  const canAccess = (requiredRole: UserRole): boolean => {\n    if (!user) return false;\n\n    const roleHierarchy: Record<UserRole, number> = {\n      [UserRole.STUDENT]: 1,\n      [UserRole.COACH]: 2,\n      [UserRole.BRANCH_MANAGER]: 3,\n      [UserRole.SYSTEM_MANAGER]: 4\n    };\n\n    return roleHierarchy[user.role] >= roleHierarchy[requiredRole];\n  };\n\n  const value: AuthContextType = {\n    // State\n    user,\n    tenant,\n    isAuthenticated,\n    isLoading,\n    error,\n\n    // Actions\n    login,\n    register,\n    logout,\n    refreshUser,\n    clearError,\n\n    // Utilities\n    hasRole,\n    hasAnyRole,\n    canAccess\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n","import React, { Component, ErrorInfo, ReactNode } from 'react'\r\n\r\ninterface Props {\r\n  children: ReactNode\r\n  fallback?: ReactNode\r\n}\r\n\r\ninterface State {\r\n  hasError: boolean\r\n  error?: Error\r\n  errorInfo?: ErrorInfo\r\n}\r\n\r\nclass ErrorBoundary extends Component<Props, State> {\r\n  constructor(props: Props) {\r\n    super(props)\r\n    this.state = { hasError: false }\r\n  }\r\n\r\n  static getDerivedStateFromError(error: Error): State {\r\n    // Update state so the next render will show the fallback UI\r\n    return { hasError: true, error }\r\n  }\r\n\r\n  componentDidCatch(error: Error, errorInfo: ErrorInfo) {\r\n    // Log the error to console and any error reporting service\r\n    console.error('ErrorBoundary caught an error:', error, errorInfo)\r\n    \r\n    this.setState({\r\n      error,\r\n      errorInfo\r\n    })\r\n\r\n    // In production, you might want to send this to an error reporting service\r\n    if (process.env.NODE_ENV === 'production') {\r\n      // Example: sendErrorToService(error, errorInfo)\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      // Custom fallback UI\r\n      if (this.props.fallback) {\r\n        return this.props.fallback\r\n      }\r\n\r\n      // Default fallback UI\r\n      return (\r\n        <div className=\"min-h-screen bg-gradient-to-br from-gray-900 via-gray-800 to-gray-900 flex items-center justify-center\">\r\n          <div className=\"max-w-md mx-auto text-center p-8\">\r\n            <div className=\"mb-6\">\r\n              <div className=\"text-6xl mb-4\">⚠️</div>\r\n              <h1 className=\"text-2xl font-bold text-white mb-2\">\r\n                Something went wrong\r\n              </h1>\r\n              <p className=\"text-gray-300 mb-6\">\r\n                We're sorry, but something unexpected happened. Please try refreshing the page.\r\n              </p>\r\n            </div>\r\n            \r\n            <div className=\"space-y-4\">\r\n              <button\r\n                onClick={() => window.location.reload()}\r\n                className=\"w-full bg-blue-600 hover:bg-blue-700 text-white font-medium py-2 px-4 rounded-lg transition-colors\"\r\n              >\r\n                Refresh Page\r\n              </button>\r\n              \r\n              <button\r\n                onClick={() => this.setState({ hasError: false, error: undefined, errorInfo: undefined })}\r\n                className=\"w-full bg-gray-600 hover:bg-gray-700 text-white font-medium py-2 px-4 rounded-lg transition-colors\"\r\n              >\r\n                Try Again\r\n              </button>\r\n            </div>\r\n\r\n            {process.env.NODE_ENV === 'development' && this.state.error && (\r\n              <details className=\"mt-6 text-left\">\r\n                <summary className=\"text-gray-400 cursor-pointer hover:text-white\">\r\n                  Error Details (Development)\r\n                </summary>\r\n                <div className=\"mt-2 p-4 bg-gray-800 rounded-lg text-sm text-gray-300 overflow-auto max-h-64\">\r\n                  <div className=\"mb-2\">\r\n                    <strong className=\"text-red-400\">Error:</strong>\r\n                    <pre className=\"whitespace-pre-wrap\">{this.state.error.toString()}</pre>\r\n                  </div>\r\n                  {this.state.errorInfo && (\r\n                    <div>\r\n                      <strong className=\"text-red-400\">Component Stack:</strong>\r\n                      <pre className=\"whitespace-pre-wrap\">{this.state.errorInfo.componentStack}</pre>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </details>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n\r\n    return this.props.children\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary\r\n","import React, { useState, useEffect } from 'react'\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom'\nimport { LanguageProvider, Language } from './contexts/LanguageContext'\nimport { AuthProvider, useAuth } from './contexts/AuthContext'\nimport WelcomeLanguage from './pages/WelcomeLanguage'\nimport ProtectedRoute from './components/ProtectedRoute'\nimport ErrorBoundary from './components/ErrorBoundary'\nimport Login from './pages/Login'\nimport AdminPortal from './pages/admin/AdminPortal'\n\nfunction App() {\n  const [sidebarCollapsed, setSidebarCollapsed] = useState(false)\n  const [isMobile, setIsMobile] = useState(false)\n  const [selectedLanguage, setSelectedLanguage] = useState<Language>('ENU')\n\n  useEffect(() => {\n    const checkMobile = () => {\n      setIsMobile(window.innerWidth < 768)\n      // On mobile, always start with collapsed sidebar\n      if (window.innerWidth < 768) {\n        setSidebarCollapsed(true)\n      }\n    }\n    \n    checkMobile()\n    window.addEventListener('resize', checkMobile)\n    \n    return () => window.removeEventListener('resize', checkMobile)\n  }, [])\n\n  useEffect(() => {\n    // Initialize language from localStorage\n    const savedLanguage = localStorage.getItem('selectedLanguage') as Language\n    if (savedLanguage) {\n      setSelectedLanguage(savedLanguage)\n    }\n  }, [])\n\n  const toggleSidebar = () => {\n    setSidebarCollapsed(!sidebarCollapsed)\n  }\n\n  const handleLanguageSelect = (language: Language) => {\n    setSelectedLanguage(language)\n  }\n\n  return (\n    <ErrorBoundary>\n      <LanguageProvider initialLanguage={selectedLanguage}>\n        <AuthProvider>\n          <Router basename=\"/\">\n            <div className=\"min-h-screen bg-gradient-to-br from-gray-900 via-gray-800 to-gray-900 text-white\">\n              <LanguageRouter\n                sidebarCollapsed={sidebarCollapsed}\n                onToggleSidebar={toggleSidebar}\n                isMobile={isMobile}\n                onLanguageSelect={handleLanguageSelect}\n              />\n            </div>\n          </Router>\n        </AuthProvider>\n      </LanguageProvider>\n    </ErrorBoundary>\n  )\n}\n\nexport default App","import React from 'react'\r\nimport ReactDOM from 'react-dom/client'\r\nimport App from './App.tsx'\r\nimport './index.css'\r\n\r\nReactDOM.createRoot(document.getElementById('root')!).render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n)\r\n"],"names":["m","require$$0","client","LanguageContext","createContext","translations","LanguageProvider","children","initialLanguage","language","setLanguage","useState","isInitialized","setIsInitialized","useEffect","selectedLanguage","savedLanguage","validLanguages","languageToUse","error","t","key","_a","translation","jsx","API_BASE_URL","ApiClient","baseURL","__publicField","accessToken","refreshToken","endpoint","options","url","headers","response","data","credentials","mockToken","mockUser","mockTenant","backendCredentials","_b","_d","_c","_f","_e","_g","_h","params","queryParams","value","id","userData","classData","tenantDomain","branchId","bookingData","apiClient","AuthContext","AuthProvider","user","setUser","tenant","setTenant","isAuthenticated","setIsAuthenticated","isLoading","setIsLoading","setError","INACTIVITY_TIMEOUT","inactivityTimerRef","useRef","lastActivityRef","initializeAuth","setupInactivityTracking","event","savedAuth","authData","savedUser","savedTenant","timestamp","parseError","saveAuthToStorage","logout","clearAuthFromStorage","resetInactivityTimer","login","result","testData","register","role","roles","requiredRole","roleHierarchy","ErrorBoundary","Component","props","errorInfo","jsxs","App","sidebarCollapsed","setSidebarCollapsed","isMobile","setIsMobile","setSelectedLanguage","checkMobile","toggleSidebar","handleLanguageSelect","Router","ReactDOM","React"],"mappings":"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","x_google_ignoreList":[0]}